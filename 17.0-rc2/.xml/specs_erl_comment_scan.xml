<module name="erl_comment_scan">
<type>
  <name>comment</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-comment">comment()</marker> = {integer(), integer(), integer(), [string()]}</typehead></typedecl>
</type>
<type>
  <name>commentLine</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-commentLine">commentLine()</marker> = {integer(), integer(), integer(), string()}</typehead></typedecl>
</type>
<spec>
  <name>file</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>file(Name :: <seealso marker="file#type-filename">file:filename()</seealso>) -&gt; [<seealso marker="#type-comment">comment()</seealso>]</head></clause>
  </contract>
  <anno>Name</anno>
</spec>
<spec>
  <name>join_lines</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>join_lines(Lines :: [<seealso marker="#type-commentLine">commentLine()</seealso>]) -&gt; [<seealso marker="#type-comment">comment()</seealso>]</head></clause>
  </contract>
  <anno>Lines</anno>
</spec>
<spec>
  <name>scan_lines</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>scan_lines(Text :: string()) -&gt; [<seealso marker="#type-commentLine">commentLine()</seealso>]</head></clause>
  </contract>
  <anno>Text</anno>
</spec>
<spec>
  <name>string</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>string(Text :: string()) -&gt; [<seealso marker="#type-comment">comment()</seealso>]</head></clause>
  </contract>
  <anno>Text</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:27:55.</timestamp>
</module>