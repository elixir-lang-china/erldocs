<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>ssl_manager</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>ssl_manager.xml</file></header>
<module>ssl_manager</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>certdb_ref() = reference()</c></tag>
<item><marker id="type-certdb_ref"/> </item>
<tag><c>db_handle() = term()</c></tag>
<item><marker id="type-db_handle"/> </item>
<tag><c>der_cert() = binary()</c></tag>
<item><marker id="type-der_cert"/> </item>
<tag><c>from() = term()</c></tag>
<item><marker id="type-from"/> </item>
<tag><c>host() = ip_address() (see module inet) | hostname() (see module inet)</c></tag>
<item><marker id="type-host"/> </item>
<tag><c>issuer() = tuple()</c></tag>
<item><marker id="type-issuer"/> </item>
<tag><c>msg() = term()</c></tag>
<item><marker id="type-msg"/> </item>
<tag><c>reason() = term()</c></tag>
<item><marker id="type-reason"/> </item>
<tag><c>reply() = term()</c></tag>
<item><marker id="type-reply"/> </item>
<tag><c>serialnumber() = integer()</c></tag>
<item><marker id="type-serialnumber"/> </item>
<tag><c>session_id() = 0 | binary()</c></tag>
<item><marker id="type-session_id"/> </item>
</taglist></section>
<funcs>
<func>
<name>manager_name(X1::normal | dist) -&gt; atom()</name>
<fsummary> </fsummary>

<desc><marker id="manager_name-1"/>
 </desc></func>
<func>
<name>start_link(Opts::list()) -&gt; {ok, pid()} | ignore | {error, term()}</name>
<fsummary> </fsummary>

<desc><marker id="start_link-1"/>
 </desc></func>
<func>
<name>start_link_dist(Opts::list()) -&gt; {ok, pid()} | ignore | {error, term()}</name>
<fsummary> </fsummary>

<desc><marker id="start_link_dist-1"/>
 </desc></func>
<func>
<name>connection_init(Trustedcerts::binary() | {der, list()}, Role::client | server) -&gt; {ok, certdb_ref(), db_handle(), db_handle(), db_handle(), db_handle()}</name>
<fsummary> </fsummary>

<desc><marker id="connection_init-2"/>
 </desc></func>
<func>
<name>cache_pem_file(File::binary(), DbHandle::term()) -&gt; {ok, term()} | {error, reason()}</name>
<fsummary> </fsummary>

<desc><marker id="cache_pem_file-2"/>
 </desc></func>
<func>
<name>clear_pem_cache() -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="clear_pem_cache-0"/>
 </desc></func>
<func>
<name>lookup_trusted_cert(DbHandle::term(), Ref::reference(), SerialNumber::serialnumber(), Issuer::issuer()) -&gt; undefined | {ok, {der_cert(), #'OTPCertificate'{}}}</name>
<fsummary> </fsummary>

<desc><marker id="lookup_trusted_cert-4"/>
 </desc></func>
<func>
<name>new_session_id(Port::integer()) -&gt; session_id()</name>
<fsummary> </fsummary>

<desc><marker id="new_session_id-1"/>
 </desc></func>
<func>
<name>clean_cert_db(Ref::reference(), File::binary()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="clean_cert_db-2"/>
 </desc></func>
<func>
<name>register_session(Host::host(), Port::port_number() (see module inet), Session::#session{}) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="register_session-3"/>
 </desc></func>
<func>
<name>register_session(Port::port_number() (see module inet), Session::#session{}) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="register_session-2"/>
 </desc></func>
<func>
<name>invalidate_session(Host::host(), Port::port_number() (see module inet), Session::#session{}) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="invalidate_session-3"/>
 </desc></func>
<func>
<name>invalidate_session(Port::port_number() (see module inet), Session::#session{}) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="invalidate_session-2"/>
 </desc></func>
<func>
<name>init(X1::list()) -&gt; {ok, #state{}}</name>
<fsummary> </fsummary>

<desc><marker id="init-1"/>
 </desc></func>
<func>
<name>handle_call(X1::msg(), From::from(), State::#state{}) -&gt; {reply, reply(), #state{}}</name>
<fsummary> </fsummary>

<desc><marker id="handle_call-3"/>
 </desc></func>
<func>
<name>handle_cast(X1::msg(), State::#state{}) -&gt; {noreply, #state{}}</name>
<fsummary> </fsummary>

<desc><marker id="handle_cast-2"/>
 </desc></func>
<func>
<name>handle_info(Info::msg(), State::#state{}) -&gt; {noreply, #state{}}</name>
<fsummary> </fsummary>

<desc><marker id="handle_info-2"/>
 </desc></func>
<func>
<name>terminate(Reason::reason(), State::#state{}) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="terminate-2"/>
 </desc></func>
<func>
<name>code_change(OldVsn::term(), State::#state{}, Extra::list()) -&gt; {ok, #state{}}</name>
<fsummary> </fsummary>

<desc><marker id="code_change-3"/>
 </desc></func>
<func>
<name>init_session_validator(X1) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="init_session_validator-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>