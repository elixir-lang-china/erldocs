<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>ssl_pkix_db</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>ssl_pkix_db.xml</file></header>
<module>ssl_pkix_db</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>certdb_ref() = reference()</c></tag>
<item><marker id="type-certdb_ref"/> </item>
<tag><c>db_handle() = term()</c></tag>
<item><marker id="type-db_handle"/> </item>
<tag><c>der_cert() = binary()</c></tag>
<item><marker id="type-der_cert"/> </item>
<tag><c>issuer() = tuple()</c></tag>
<item><marker id="type-issuer"/> </item>
<tag><c>serialnumber() = integer()</c></tag>
<item><marker id="type-serialnumber"/> </item>
</taglist></section>
<funcs>
<func>
<name>create() -&gt; [db_handle(), ...]</name>
<fsummary> </fsummary>

<desc><marker id="create-0"/>
 </desc></func>
<func>
<name>remove(Dbs::[db_handle()]) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="remove-1"/>
 </desc></func>
<func>
<name>lookup_trusted_cert(DbHandle::db_handle(), Ref::certdb_ref(), SerialNumber::serialnumber(), Issuer::issuer()) -&gt; undefined | {ok, {der_cert(), #'OTPCertificate'{}}}</name>
<fsummary> </fsummary>

<desc><marker id="lookup_trusted_cert-4"/>
 </desc></func>
<func>
<name>lookup_cached_pem(PemChache, MD5) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="lookup_cached_pem-2"/>
 </desc></func>
<func>
<name>add_trusted_certs(Pid::pid(), File::{timestamp() (see module erlang), string()} | {der, list()}, Db::[db_handle()]) -&gt; {ok, [db_handle()]}</name>
<fsummary> </fsummary>

<desc><marker id="add_trusted_certs-3"/>
 </desc></func>
<func>
<name>cache_pem_file(X1::{binary(), binary()}, X2::[db_handle()]) -&gt; {ok, term()}</name>
<fsummary> </fsummary>

<desc><marker id="cache_pem_file-2"/>
 </desc></func>
<func>
<name>cache_pem_file(Ref::reference(), X2::{binary(), binary()}, X3::[db_handle()]) -&gt; {ok, term()}</name>
<fsummary> </fsummary>

<desc><marker id="cache_pem_file-3"/>
 </desc></func>
<func>
<name>remove_trusted_certs(Ref::reference(), CertsDb::db_handle()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="remove_trusted_certs-2"/>
 </desc></func>
<func>
<name>remove(Key::term(), Db::db_handle()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="remove-2"/>
 </desc></func>
<func>
<name>lookup(Key::term(), Db::db_handle()) -&gt; [term()] | undefined</name>
<fsummary> </fsummary>

<desc><marker id="lookup-2"/>
 </desc></func>
<func>
<name>foldl(Fun::(term(), term()) -&gt; term(), Acc0::term(), Cache::db_handle()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="foldl-3"/>
 </desc></func>
<func>
<name>ref_count(Key::term(), Db::db_handle(), N::integer()) -&gt; integer()</name>
<fsummary> </fsummary>

<desc><marker id="ref_count-3"/>
 </desc></func>
<func>
<name>clear(Db::db_handle()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="clear-1"/>
 </desc></func>
<func>
<name>db_size(Db::db_handle()) -&gt; integer()</name>
<fsummary> </fsummary>

<desc><marker id="db_size-1"/>
 </desc></func>
<func>
<name>insert(Key::term(), Data::term(), Db::db_handle()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="insert-3"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>