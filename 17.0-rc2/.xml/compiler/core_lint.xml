<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>core_lint</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>core_lint.xml</file></header>
<module>core_lint</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>err_desc() = invalid_attributes | invalid_exports | {arg_mismatch, fa()} | {bittype_unit, fa()} | {illegal_expr, fa()} | {illegal_guard, fa()} | {illegal_pattern, fa()} | {illegal_try, fa()} | {not_bs_pattern, fa()} | {not_pattern, fa()} | {not_var, fa()} | {pattern_mismatch, fa()} | {return_mismatch, fa()} | {undefined_function, fa()} | {duplicate_var, var_name() (see module cerl), fa()} | {unbound_var, var_name() (see module cerl), fa()} | {undefined_function, fa(), fa()} | {tail_segment_not_at_end, fa()}</c></tag>
<item><marker id="type-err_desc"/> </item>
<tag><c>error() = {none, module(), err_desc()}</c></tag>
<item><marker id="type-error"/> </item>
<tag><c>fa() = {atom(), arity()}</c></tag>
<item><marker id="type-fa"/> </item>
<tag><c>ret() = {ok, [{module(), [warning(), ...]}]} | {error, [{module(), [error(), ...]}], [{module(), [warning(), ...]}]}</c></tag>
<item><marker id="type-ret"/> </item>
<tag><c>warning() = {module(), term()}</c></tag>
<item><marker id="type-warning"/> </item>
</taglist></section>
<funcs>
<func>
<name>format_error(X1::err_desc()) -&gt; [char() | list()]</name>
<fsummary> </fsummary>

<desc><marker id="format_error-1"/>
 </desc></func>
<func>
<name>module(M::c_module() (see module cerl)) -&gt; ret()</name>
<fsummary> </fsummary>

<desc><marker id="module-1"/>
 </desc></func>
<func>
<name>module(C_module::c_module() (see module cerl), Opts::[option() (see module compile)]) -&gt; ret()</name>
<fsummary> </fsummary>

<desc><marker id="module-2"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>