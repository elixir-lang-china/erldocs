<module name="dialyzer_timing">
<type>
  <name>timing_server</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-timing_server">timing_server()</marker> = pid() | none</typehead></typedecl>
</type>
<spec>
  <name>end_stamp</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>end_stamp(Pid :: <seealso marker="#type-timing_server">timing_server()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Pid</anno>
</spec>
<spec>
  <name>init</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>init(Active :: boolean() | debug) -&gt; <seealso marker="#type-timing_server">timing_server()</seealso></head></clause>
  </contract>
  <anno>Active</anno>
</spec>
<spec>
  <name>send_size_info</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>send_size_info(Pid :: <seealso marker="#type-timing_server">timing_server()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Size :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Unit :: string()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Pid</anno>
  <anno>Size</anno>
  <anno>Unit</anno>
</spec>
<spec>
  <name>start_stamp</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>start_stamp(Pid :: <seealso marker="#type-timing_server">timing_server()</seealso>, Msg :: string()) -&gt; ok</head></clause>
  </contract>
  <anno>Msg</anno>
  <anno>Pid</anno>
</spec>
<spec>
  <name>stop</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>stop(Pid :: <seealso marker="#type-timing_server">timing_server()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Pid</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:29:01.</timestamp>
</module>