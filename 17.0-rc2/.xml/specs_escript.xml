<module name="escript">
<type>
  <name>comment</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-comment">comment()</marker> = string()</typehead></typedecl>
</type>
<type>
  <name>emu_args</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-emu_args">emu_args()</marker> = string()</typehead></typedecl>
</type>
<type>
  <name>extract_option</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-extract_option">extract_option()</marker> = compile_source | {section, [<seealso marker="#type-section_name">section_name()</seealso>]}</typehead></typedecl>
</type>
<type>
  <name>section</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-section">section()</marker> = shebang<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {shebang, <seealso marker="#type-shebang">shebang()</seealso> | default | undefined}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| comment<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {comment, <seealso marker="#type-comment">comment()</seealso> | default | undefined}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {emu_args, <seealso marker="#type-emu_args">emu_args()</seealso> | undefined}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {source, <seealso marker="file#type-filename">file:filename()</seealso> | binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {beam, <seealso marker="file#type-filename">file:filename()</seealso> | binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {archive, <seealso marker="file#type-filename">file:filename()</seealso> | binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {archive, [<seealso marker="#type-zip_file">zip_file()</seealso>], [<seealso marker="#type-zip_create_option">zip_create_option()</seealso>]}</typehead></typedecl>
</type>
<type>
  <name>section_name</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-section_name">section_name()</marker> = shebang | comment | emu_args | body</typehead></typedecl>
</type>
<type>
  <name>shebang</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-shebang">shebang()</marker> = string()</typehead></typedecl>
</type>
<type>
  <name>zip_create_option</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-zip_create_option">zip_create_option()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>zip_file</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-zip_file">zip_file()</marker> = <seealso marker="file#type-filename">file:filename()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {<seealso marker="file#type-filename">file:filename()</seealso>, binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {<seealso marker="file#type-filename">file:filename()</seealso>, binary(), <seealso marker="file#type-file_info">file:file_info()</seealso>}</typehead></typedecl>
</type>
<spec>
  <name>create</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>create(File :: <seealso marker="file#type-filename">file:filename()</seealso> | binary, Options :: [<seealso marker="#type-section">section()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok | {ok, binary()} | {error, term()}</head></clause>
  </contract>
  <anno>File</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>extract</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>extract(File :: <seealso marker="file#type-filename">file:filename()</seealso>, Options :: [<seealso marker="#type-extract_option">extract_option()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, [<seealso marker="#type-section">section()</seealso>]} | {error, term()}</head></clause>
  </contract>
  <anno>File</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>parse_file</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>script_name</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>script_name() -&gt; string()</head></clause>
  </contract>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>start() -&gt; no_return()</head></clause>
  </contract>
</spec>
<spec>
  <name>start</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>start(EscriptOptions :: [string()]) -&gt; no_return()</head></clause>
  </contract>
  <anno>EscriptOptions</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:27:59.</timestamp>
</module>