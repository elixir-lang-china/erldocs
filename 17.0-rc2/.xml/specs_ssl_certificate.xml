<module name="ssl_certificate">
<type>
  <name>certdb_ref</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-certdb_ref">certdb_ref()</marker> = reference()</typehead></typedecl>
</type>
<type>
  <name>db_handle</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-db_handle">db_handle()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>der_cert</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-der_cert">der_cert()</marker> = binary()</typehead></typedecl>
</type>
<spec>
  <name>certificate_chain</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>certificate_chain(OwnCert :: undefined | binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbHandle :: <seealso marker="#type-db_handle">db_handle()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertsDbRef :: <seealso marker="#type-certdb_ref">certdb_ref()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, no_cert} | {ok, [<seealso marker="#type-der_cert">der_cert()</seealso>]}</head></clause>
  </contract>
  <anno>CertDbHandle</anno>
  <anno>CertsDbRef</anno>
  <anno>OwnCert</anno>
</spec>
<spec>
  <name>extensions_list</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>extensions_list(Extensions :: asn1_NOVALUE | list()) -&gt; list()</head></clause>
  </contract>
  <anno>Extensions</anno>
</spec>
<spec>
  <name>file_to_certificats</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>file_to_certificats(File :: binary(), DbHandle :: term()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-der_cert">der_cert()</seealso>]</head></clause>
  </contract>
  <anno>DbHandle</anno>
  <anno>File</anno>
</spec>
<spec>
  <name>is_valid_extkey_usage</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>is_valid_key_usage</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>is_valid_key_usage(KeyUse :: list(), Use :: term()) -&gt; boolean()</head></clause>
  </contract>
  <anno>KeyUse</anno>
  <anno>Use</anno>
</spec>
<spec>
  <name>public_key_type</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>public_key_type(X1 :: term()) -&gt; rsa | dsa | ec</head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>select_extension</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>select_extension(Id :: term(), Extensions :: list()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>undefined | #'Extension'{}</head></clause>
  </contract>
  <anno>Extensions</anno>
  <anno>Id</anno>
</spec>
<spec>
  <name>trusted_cert_and_path</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>trusted_cert_and_path(CertChain :: [<seealso marker="#type-der_cert">der_cert()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbHandle :: <seealso marker="#type-db_handle">db_handle()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbRef :: <seealso marker="#type-certdb_ref">certdb_ref()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-der_cert">der_cert()</seealso> | unknown_ca, [<seealso marker="#type-der_cert">der_cert()</seealso>]}</head></clause>
  </contract>
  <anno>CertChain</anno>
  <anno>CertDbHandle</anno>
  <anno>CertDbRef</anno>
</spec>
<spec>
  <name>validate_extension</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>validate_extension(X1 :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Reason :: {extension, #'Extension'{}}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {bad_cert, atom()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| valid,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Role :: term()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{valid, term()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{fail, tuple()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{unknown, term()}</head></clause>
  </contract>
  <anno>Reason</anno>
  <anno>Role</anno>
  <anno>X1</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:28:05.</timestamp>
</module>