<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>edoc_parser</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>edoc_parser.xml</file></header>
<module>edoc_parser</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>yecc_ret() = {error, term()} | {ok, term()}</c></tag>
<item><marker id="type-yecc_ret"/> </item>
</taglist></section>
<funcs>
<func>
<name>parse_spec(S, L) -&gt; term()
</name>
<fsummary>EDoc type specification parsing.</fsummary>

<desc><marker id="parse_spec-2"/>

<p>EDoc type specification parsing. Parses the content of
  <seealso marker="chapter#ftag-spec">@spec</seealso> declarations.</p>
</desc></func>
<func>
<name>parse_typedef(S, L) -&gt; term()
</name>
<fsummary>EDoc type definition parsing.</fsummary>

<desc><marker id="parse_typedef-2"/>

<p>EDoc type definition parsing. Parses the content of
  <seealso marker="chapter#gtag-type">@type</seealso> declarations.</p>
</desc></func>
<func>
<name>parse_ref(S, L) -&gt; term()
</name>
<fsummary>Parses a reference to a module,
  package, function, type, or application.</fsummary>

<desc><marker id="parse_ref-2"/>

<p>Parses a <seealso marker="chapter#References">reference</seealso> to a module,
  package, function, type, or application</p>
</desc></func>
<func>
<name>parse_see(S, L) -&gt; term()
</name>
<fsummary>Parses the content of
  @see references.</fsummary>

<desc><marker id="parse_see-2"/>

<p>Parses the content of
  <seealso marker="chapter#ftag-see">@see</seealso> references.</p>
</desc></func>
<func>
<name>parse_param(S, L) -&gt; term()
</name>
<fsummary>Parses the content of
  @param tags.</fsummary>

<desc><marker id="parse_param-2"/>

<p>Parses the content of
  <seealso marker="chapter#ftag-param">@param</seealso> tags.</p>
</desc></func>
<func>
<name>parse_throws(S, L) -&gt; term()
</name>
<fsummary>EDoc exception specification parsing.</fsummary>

<desc><marker id="parse_throws-2"/>

<p>EDoc exception specification parsing. Parses the content of
  <seealso marker="chapter#ftag-throws">@throws</seealso> declarations.</p>
</desc></func>
<func>
<name>parse(Tokens::list()) -&gt; yecc_ret()</name>
<fsummary> </fsummary>

<desc><marker id="parse-1"/>
 </desc></func>
<func>
<name>parse_and_scan(X1::{function() | {atom(), atom()}, [term()]} | {atom(), atom(), [term()]}) -&gt; yecc_ret()</name>
<fsummary> </fsummary>

<desc><marker id="parse_and_scan-1"/>
 </desc></func>
<func>
<name>format_error(Message::any()) -&gt; [char() | list()]</name>
<fsummary> </fsummary>

<desc><marker id="format_error-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>