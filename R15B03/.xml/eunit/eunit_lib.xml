<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>eunit_lib</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>eunit_lib.xml</file></header>
<module>eunit_lib</module>
<modulesummary>Utility functions for eunit.</modulesummary>
<description>
<p>Utility functions for eunit</p></description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>argList() = [term()]</c></tag>
<item><marker id="type-argList"/> </item>
<tag><c>exception() = {exceptionClass(), Reason::term(), stackTrace()}</c></tag>
<item><marker id="type-exception"/> </item>
<tag><c>exceptionClass() = error | exit | throw</c></tag>
<item><marker id="type-exceptionClass"/> </item>
<tag><c>fileName() = string()</c></tag>
<item><marker id="type-fileName"/> </item>
<tag><c>functionName() = atom()</c></tag>
<item><marker id="type-functionName"/> </item>
<tag><c>moduleName() = atom()</c></tag>
<item><marker id="type-moduleName"/> </item>
<tag><c>stackTrace() = [{moduleName(), functionName(), arity() | argList()}]</c></tag>
<item><marker id="type-stackTrace"/> </item>
</taglist></section>
<funcs>
<func>
<name>format_exception(Exception) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="format_exception-1"/>
 </desc></func>
<func>
<name>format_exception(Term, Depth) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="format_exception-2"/>
 </desc></func>
<func>
<name>format_exit_term(Term) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="format_exit_term-1"/>
 </desc></func>
<func>
<name>format_error(X1) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="format_error-1"/>
 </desc></func>
<func>
<name>is_not_test(T) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="is_not_test-1"/>
 </desc></func>
<func>
<name>dlist_next(Xs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dlist_next-1"/>
 </desc></func>
<func>
<name>is_string(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="is_string-1"/>
 </desc></func>
<func>
<name>split_node(N) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="split_node-1"/>
 </desc></func>
<func>
<name>fun_parent(F) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="fun_parent-1"/>
 </desc></func>
<func>
<name>uniq(Xs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="uniq-1"/>
 </desc></func>
<func>
<name>command(Cmd) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="command-1"/>
 </desc></func>
<func>
<name>command(Cmd, Dir) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="command-2"/>
 </desc></func>
<func>
<name>command(Cmd, Dir, Env) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="command-3"/>
 </desc></func>
<func>
<name>consult_file(File) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="consult_file-1"/>
 </desc></func>
<func>
<name>list_dir(Dir) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="list_dir-1"/>
 </desc></func>
<func>
<name>trie_new() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="trie_new-0"/>
 </desc></func>
<func>
<name>trie_store(Es, T) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="trie_store-2"/>
 </desc></func>
<func>
<name>trie_match(Es, T) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="trie_match-2"/>
 </desc></func></funcs>
<section><title>See also</title><p><seealso marker="eunit">eunit</seealso></p></section>
<authors>

<aname>Mickaël Rémond</aname>
<email>mickael.remond@process-one.net</email>
<aname>Richard Carlsson</aname>
<email>carlsson.richard@gmail.com</email></authors></erlref>