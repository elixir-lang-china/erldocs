<module name="file_server">
<type>
  <name>state</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-state">state()</marker> = port()</typehead></typedecl>
</type>
<spec>
  <name>code_change</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>code_change(OldVsn :: term(), State :: <seealso marker="#type-state">state()</seealso>, Extra :: term()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>Extra</anno>
  <anno>OldVsn</anno>
  <anno>State</anno>
</spec>
<spec>
  <name>format_error</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>handle_call</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>handle_call(Request :: term(), From :: term(), Handle :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{noreply, <seealso marker="#type-state">state()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{reply,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>eof | ok | {error, term()} | {ok, term()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-state">state()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{stop, normal, stopped, <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>From</anno>
  <anno>Handle</anno>
  <anno>Request</anno>
</spec>
<spec>
  <name>handle_cast</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>handle_cast(Msg :: term(), State :: <seealso marker="#type-state">state()</seealso>) -&gt; {noreply, <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>Msg</anno>
  <anno>State</anno>
</spec>
<spec>
  <name>handle_info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>handle_info(Info :: term(), Handle :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{noreply, <seealso marker="#type-state">state()</seealso>} | {stop, normal, <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>Handle</anno>
  <anno>Info</anno>
</spec>
<spec>
  <name>init</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>init(X1 :: []) -&gt; {ok, <seealso marker="#type-state">state()</seealso>} | {stop, term()}</head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>start_link</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>stop</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>terminate</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>terminate(Reason :: term(), Handle :: <seealso marker="#type-state">state()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Handle</anno>
  <anno>Reason</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:36.</timestamp>
</module>