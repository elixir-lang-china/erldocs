<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>eval_bits</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>eval_bits.xml</file></header>
<module>eval_bits</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>bindings()</c></tag>
<item><marker id="type-bindings"/>
<p>An abstract structure for bindings between
  variables and values (the environment)
 </p>
</item>
<tag><c>evalfun()</c></tag>
<item><marker id="type-evalfun"/>
<p>A closure which evaluates an expression given an
  environment
 </p>
</item>
<tag><c>field()</c></tag>
<item><marker id="type-field"/>
<p>Represents a field in a "bin".</p>
</item>
<tag><c>matchfun()</c></tag>
<item><marker id="type-matchfun"/>
<p>A closure which depending on its first argument
  can perform a match (given a value, a pattern and an environment),
  lookup a variable in the bindings, or add a new binding
 </p>
</item>
</taglist></section>
<funcs>
<func>
<name>expr_grp(Fields::[field()], Bindings::bindings(), EvalFun::evalfun(), ListOfBits::term(), X5::term()) -&gt; {value, binary(), bindings()}</name>
<fsummary>Returns a tuple with {value,Bin,Bs} where Bin is the binary
  constructed from form the Fields under the current Bindings.</fsummary>

<desc><marker id="expr_grp-5"/>

<p>Returns a tuple with {value,Bin,Bs} where Bin is the binary
  constructed from form the Fields under the current Bindings. Bs
  contains the present bindings. This function can also throw an
  exception if the construction fails.</p>
</desc></func>
<func>
<name>expr_grp(Fields, Bindings, EvalFun) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="expr_grp-3"/>
 </desc></func>
<func>
<name>bin_gen(BinPattern::{bin, integer(), [field()]}, Bin::binary(), GlobalEnv::bindings(), LocalEnv::bindings(), MatchFun::matchfun(), EvalFun::evalfun()) -&gt; {match, binary(), bindings()} | {nomatch, binary()} | done</name>
<fsummary>Used to perform matching in a comprehension.</fsummary>

<desc><marker id="bin_gen-6"/>

<p>Used to perform matching in a comprehension. If the match
  succeeds a new environment and what remains of the binary is
  returned. If the match fails what remains of the binary is returned.
  If nothing remains of the binary the atom 'done' is returned.</p>
</desc></func>
<func>
<name>match_bits(Fields::[field()], Bin::binary(), GlobalEnv::bindings(), LocalEnv::bindings(), MatchFun::matchfun(), EvalFun::evalfun(), X7::term()) -&gt; {match, bindings()}</name>
<fsummary>Used to perform matching.</fsummary>

<desc><marker id="match_bits-7"/>

<p>Used to perform matching. If the match succeeds a new
  environment is returned. If the match have some syntactic or
  semantic problem which would have been caught at compile time this
  function throws 'invalid', if the matching fails for other reasons
  the function throws 'nomatch'</p>
</desc></func>
<func>
<name>match_bits(Fs, Bin, Bs0, BBs, Mfun, Efun) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="match_bits-6"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>