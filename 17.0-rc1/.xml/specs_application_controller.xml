<module name="application_controller">
<type>
  <name>appname</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-appname">appname()</marker> = atom()</typehead></typedecl>
</type>
<type>
  <name>calls</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-calls">calls()</marker> = info<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| prep_config_change<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| which_applications<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {config_change |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>control_application |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>load_application |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>start_type |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>stop_application |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>unload_application,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {change_application_data, term(), term()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {permit_application,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>atom() | {application, atom(), term()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {start_application, term(), term()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {unset_env, term(), term()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {set_env, term(), term(), term()}</typehead></typedecl>
</type>
<type>
  <name>state</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-state">state()</marker> = #state{}</typehead></typedecl>
</type>
<spec>
  <name>change_application_data</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>code_change</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>code_change(OldVsn :: term(), State :: <seealso marker="#type-state">state()</seealso>, Extra :: term()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>Extra</anno>
  <anno>OldVsn</anno>
  <anno>State</anno>
</spec>
<spec>
  <name>config_change</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>control_application</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>do_config_diff</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_all_env</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_all_key</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_application</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_application_module</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_env</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_key</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_loaded</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_master</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_pid_all_env</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_pid_all_key</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>get_pid_env</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>get_pid_key</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>handle_call</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>handle_call(X1 :: <seealso marker="#type-calls">calls()</seealso>, From :: {pid(), term()}, S :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{noreply, <seealso marker="#type-state">state()</seealso>} | {reply, term(), <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>From</anno>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>handle_cast</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>handle_cast(X1 :: {application_started, <seealso marker="#type-appname">appname()</seealso>, term()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>S :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{noreply, <seealso marker="#type-state">state()</seealso>} | {stop, string(), <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>handle_info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>handle_info(X1 :: term(), S :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{noreply, <seealso marker="#type-state">state()</seealso>} | {stop, string(), <seealso marker="#type-state">state()</seealso>}</head></clause>
  </contract>
  <anno>S</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>info</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>init_starter</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>load_application</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>loaded_applications</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>permit_application</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>prep_config_change</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>set_env</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>set_env</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>start</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>start_application</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>start_boot_application</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>start_type</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>stop_application</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>terminate</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>terminate(Reason :: term(), S :: <seealso marker="#type-state">state()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Reason</anno>
  <anno>S</anno>
</spec>
<spec>
  <name>test_change_apps</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>unload_application</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>unset_env</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>unset_env</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>which_applications</name>
  <arity>0</arity>
  <contract/>
</spec>
<spec>
  <name>which_applications</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:35.</timestamp>
</module>