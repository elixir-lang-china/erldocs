<module name="pubkey_ssh">
<type>
  <name>dsa_public_key</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dsa_public_key">dsa_public_key()</marker> = {integer(), #'Dss-Parms'{}}</typehead></typedecl>
</type>
<type>
  <name>ec_public_key</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-ec_public_key">ec_public_key()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{#'ECPoint'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{namedCurve, Oid :: tuple()} | #'ECParameters'{}}</typehead></typedecl>
  <anno>Oid</anno>
</type>
<type>
  <name>public_key</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-public_key">public_key()</marker> = <seealso marker="#type-rsa_public_key">rsa_public_key()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-dsa_public_key">dsa_public_key()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-ec_public_key">ec_public_key()</seealso></typehead></typedecl>
</type>
<type>
  <name>rsa_public_key</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-rsa_public_key">rsa_public_key()</marker> = #'RSAPublicKey'{}</typehead></typedecl>
</type>
<type>
  <name>ssh_file</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-ssh_file">ssh_file()</marker> = openssh_public_key<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| rfc4716_public_key<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| known_hosts<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| auth_keys</typehead></typedecl>
</type>
<spec>
  <name>decode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>decode(Bin :: binary(), Type :: public_key | <seealso marker="#type-ssh_file">ssh_file()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{<seealso marker="#type-public_key">public_key()</seealso>, Attributes :: list()}]</head></clause>
  </contract>
  <anno>Attributes</anno>
  <anno>Bin</anno>
  <anno>Type</anno>
</spec>
<spec>
  <name>encode</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>encode(Entries :: [{<seealso marker="#type-public_key">public_key()</seealso>, Attributes :: list()}],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seealso marker="#type-ssh_file">ssh_file()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary()</head></clause>
  </contract>
  <anno>Attributes</anno>
  <anno>Entries</anno>
  <anno>Type</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:08.</timestamp>
</module>