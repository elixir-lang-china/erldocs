<module name="heart">
<spec>
  <name>clear_cmd</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>clear_cmd() -&gt; ok</head></clause>
  </contract>
</spec>
<spec>
  <name>cycle</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>cycle() -&gt; ok | {error, term()}</head></clause>
  </contract>
</spec>
<spec>
  <name>get_cmd</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>get_cmd() -&gt; {ok, Cmd}</head>
      <guard>
        <subtype><typename>Cmd</typename><string>Cmd = string()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Cmd</anno>
</spec>
<spec>
  <name>init</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>init(Starter :: pid(), Parent :: pid()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{no_heart, pid()} | {start_error, pid()}</head></clause>
  </contract>
  <anno>Parent</anno>
  <anno>Starter</anno>
</spec>
<spec>
  <name>set_cmd</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>set_cmd(Cmd) -&gt; ok | {error, {bad_cmd, Cmd}}</head>
      <guard>
        <subtype><typename>Cmd</typename><string>Cmd = string()</string></subtype>
      </guard></clause>
  </contract>
  <anno>Cmd</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>start() -&gt; ignore | {error, term()} | {ok, pid()}</head></clause>
  </contract>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:37.</timestamp>
</module>