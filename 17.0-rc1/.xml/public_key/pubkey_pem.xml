<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>pubkey_pem</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>pubkey_pem.xml</file></header>
<module>pubkey_pem</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>pem_entry() = {pki_asn1_type(), binary(), not_encrypted | {Cipher::string(), Salt::binary()}}</c></tag>
<item><marker id="type-pem_entry"/> </item>
<tag><c>pki_asn1_type() = 'Certificate' | 'RSAPrivateKey' | 'RSAPublicKey' | 'DSAPrivateKey' | 'DSAPublicKey' | 'DHParameter' | 'SubjectPublicKeyInfo' | 'CertificationRequest' | 'CertificateList'</c></tag>
<item><marker id="type-pki_asn1_type"/> </item>
</taglist></section>
<funcs>
<func>
<name>decode(Bin::binary()) -&gt; [pem_entry()]</name>
<fsummary> </fsummary>

<desc><marker id="decode-1"/>
 </desc></func>
<func>
<name>encode(PemEntries::[pem_entry()]) -&gt; iolist()</name>
<fsummary> </fsummary>

<desc><marker id="encode-1"/>
 </desc></func>
<func>
<name>decipher(X1::{pki_asn1_type(), DerEncrypted::binary(), {Cipher::string(), Salt::iodata() | #'PBES2-params'{}}}, Password::string()) -&gt; Der::binary()</name>
<fsummary> </fsummary>

<desc><marker id="decipher-2"/>
 </desc></func>
<func>
<name>cipher(Der::binary(), X2::{Cipher::string(), Salt::iodata() | #'PBES2-params'{}}, Password::string()) -&gt; binary()</name>
<fsummary> </fsummary>

<desc><marker id="cipher-3"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>