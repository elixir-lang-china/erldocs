<module name="user_sup">
<spec>
  <name>init</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>init(X1 :: []) -&gt; ignore | {error, nouser} | {ok, pid(), pid()}</head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>relay</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>relay(Pid :: pid()) -&gt; no_return()</head></clause>
  </contract>
  <anno>Pid</anno>
</spec>
<spec>
  <name>start</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>start() -&gt; {error, {already_started, pid()}} | {ok, pid()}</head></clause>
  </contract>
</spec>
<spec>
  <name>terminate</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>terminate(Reason :: term(), UserPid :: pid()) -&gt; ok</head></clause>
  </contract>
  <anno>Reason</anno>
  <anno>UserPid</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:38.</timestamp>
</module>