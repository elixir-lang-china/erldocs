<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>ic_code</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>ic_code.xml</file></header>
<module>ic_code</module>
<modulesummary/>
<description>
</description>
<funcs>
<func>
<name>get_basetype(G, MyId) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="get_basetype-2"/>
 </desc></func>
<func>
<name>insert_typedef(G, MyId, DefinedAsId) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="insert_typedef-3"/>
 </desc></func>
<func>
<name>codeDirective(G, X) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="codeDirective-2"/>
 </desc></func>
<func>
<name>gen_includes(Fd, G, Type) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="gen_includes-3"/>
 </desc></func>
<func>
<name>gen_includes(Fd, G, X, Type) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="gen_includes-4"/>
 </desc></func>
<func>
<name>type_expand_op(G, N, X, Fd) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_op-4"/>
 </desc></func>
<func>
<name>type_expand_op_exec(G, N, X, Fd) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_op_exec-4"/>
 </desc></func>
<func>
<name>type_expand_handle_op(G, N, X, Fd) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_handle_op-4"/>
 </desc></func>
<func>
<name>type_expand_all(G, N, X, Fd, Tabs, Rest) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_all-6"/>
 </desc></func>
<func>
<name>type_expand(G, N, X, Fd, Tabs, Name, X7) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand-7"/>
 </desc></func>
<func>
<name>type_expand_null(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_null-3"/>
 </desc></func>
<func>
<name>type_expand_void(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_void-3"/>
 </desc></func>
<func>
<name>type_expand_float(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_float-3"/>
 </desc></func>
<func>
<name>type_expand_double(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_double-3"/>
 </desc></func>
<func>
<name>type_expand_longdouble(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_longdouble-3"/>
 </desc></func>
<func>
<name>type_expand_short(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_short-3"/>
 </desc></func>
<func>
<name>type_expand_ushort(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_ushort-3"/>
 </desc></func>
<func>
<name>type_expand_long(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_long-3"/>
 </desc></func>
<func>
<name>type_expand_longlong(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_longlong-3"/>
 </desc></func>
<func>
<name>type_expand_ulong(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_ulong-3"/>
 </desc></func>
<func>
<name>type_expand_ulonglong(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_ulonglong-3"/>
 </desc></func>
<func>
<name>type_expand_char(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_char-3"/>
 </desc></func>
<func>
<name>type_expand_wchar(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_wchar-3"/>
 </desc></func>
<func>
<name>type_expand_boolean(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_boolean-3"/>
 </desc></func>
<func>
<name>type_expand_octet(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_octet-3"/>
 </desc></func>
<func>
<name>type_expand_any(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_any-3"/>
 </desc></func>
<func>
<name>type_expand_typecode(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_typecode-3"/>
 </desc></func>
<func>
<name>type_expand_principal(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_principal-3"/>
 </desc></func>
<func>
<name>type_expand_object(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_object-3"/>
 </desc></func>
<func>
<name>type_expand_string(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_string-3"/>
 </desc></func>
<func>
<name>type_expand_wstring(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_wstring-3"/>
 </desc></func>
<func>
<name>type_expand_exception(G, N, X, Fd, Tabs, Name, X7) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_exception-7"/>
 </desc></func>
<func>
<name>type_expand_struct(G, N, X, Fd, Tabs, Name, X7) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_struct-7"/>
 </desc></func>
<func>
<name>type_expand_union(G, N, X, Fd, Tabs, Name, X7) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_union-7"/>
 </desc></func>
<func>
<name>type_expand_enum(Fd, Tabs, Name, X4) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_enum-4"/>
 </desc></func>
<func>
<name>type_expand_sequence(G, N, X, Fd, Tabs, Name, X7) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_sequence-7"/>
 </desc></func>
<func>
<name>type_expand_array(G, N, X, Fd, Tabs, Name, X7) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_array-7"/>
 </desc></func>
<func>
<name>type_expand_error(Fd, Tabs, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_error-3"/>
 </desc></func>
<func>
<name>type_expand_struct_rule(Fd, Name, TcList) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_struct_rule-3"/>
 </desc></func>
<func>
<name>type_expand_union_rule(Fd, Rest) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_union_rule-2"/>
 </desc></func>
<func>
<name>type_expand_enum_rule(Fd, Tabs, Name, ElList) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_enum_rule-4"/>
 </desc></func>
<func>
<name>type_expand_enum_elements(Fd, Tabs, Elems) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="type_expand_enum_elements-3"/>
 </desc></func>
<func>
<name>mk_list(Args) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mk_list-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>