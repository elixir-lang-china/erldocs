<module name="dialyzer_dataflow">
<type>
  <name>dial_warn_tag</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dial_warn_tag">dial_warn_tag()</marker> = warn_return_no_exit<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_return_only_exit<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_not_called<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_non_proper_list<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_matching<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_opaque<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_fun_app<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_failing_call<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_bin_construction<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_types<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_syntax<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_not_equal<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_subtype<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_supertype<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_callgraph<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_umatched_return<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_race_condition<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_behaviour<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_range<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_undefined_callbacks</typehead></typedecl>
</type>
<type>
  <name>dial_warning</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dial_warning">dial_warning()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-dial_warn_tag">dial_warn_tag()</seealso>, <seealso marker="#type-file_line">file_line()</seealso>, {atom(), [term()]}}</typehead></typedecl>
</type>
<type>
  <name>file_line</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_line">file_line()</marker> = {<seealso marker="file#type-filename">file:filename()</seealso>, integer() &gt;= 0}</typehead></typedecl>
</type>
<type>
  <name>state</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-state">state()</marker></typehead></typedecl>
</type>
<spec>
  <name>dispose_state</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>dispose_state(State :: <seealso marker="#type-state">state()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>format_args</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>format_args(ArgList :: [<seealso marker="cerl#type-cerl">cerl:cerl()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>TypeList :: [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>State :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>nonempty_string()</head></clause>
  </contract>
  <anno>ArgList</anno>
  <anno>State</anno>
  <anno>TypeList</anno>
</spec>
<spec>
  <name>get_fun_types</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>get_fun_types(Tree :: <seealso marker="cerl#type-c_module">cerl:c_module()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Plt :: <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Records :: dict()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>dict()</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Plt</anno>
  <anno>Records</anno>
  <anno>Tree</anno>
</spec>
<spec>
  <name>get_warnings</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>get_warnings(Tree :: <seealso marker="cerl#type-c_module">cerl:c_module()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Plt :: <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Records :: dict(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NoWarnUnused :: set()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-dial_warning">dial_warning()</seealso>], dict()}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>NoWarnUnused</anno>
  <anno>Plt</anno>
  <anno>Records</anno>
  <anno>Tree</anno>
</spec>
<spec>
  <name>state__add_warning</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>state__add_warning(Warn :: <seealso marker="#type-dial_warning">dial_warning()</seealso>, State :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-state">state()</seealso></head></clause>
  </contract>
  <anno>State</anno>
  <anno>Warn</anno>
</spec>
<spec>
  <name>state__cleanup</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>state__cleanup(State :: <seealso marker="#type-state">state()</seealso>) -&gt; <seealso marker="#type-state">state()</seealso></head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>state__duplicate</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>state__duplicate(State :: <seealso marker="#type-state">state()</seealso>) -&gt; <seealso marker="#type-state">state()</seealso></head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>state__get_callgraph</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>state__get_callgraph(State :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso></head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>state__get_races</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>state__get_races(State :: <seealso marker="#type-state">state()</seealso>) -&gt; <seealso marker="dialyzer_races#type-races">dialyzer_races:races()</seealso></head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>state__get_records</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>state__get_records(State :: <seealso marker="#type-state">state()</seealso>) -&gt; dict()</head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>state__put_callgraph</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>state__put_callgraph(Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>State :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-state">state()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>State</anno>
</spec>
<spec>
  <name>state__put_races</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>state__put_races(Races :: <seealso marker="dialyzer_races#type-races">dialyzer_races:races()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>State :: <seealso marker="#type-state">state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-state">state()</seealso></head></clause>
  </contract>
  <anno>Races</anno>
  <anno>State</anno>
</spec>
<spec>
  <name>state__records_only</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>state__records_only(State :: <seealso marker="#type-state">state()</seealso>) -&gt; <seealso marker="#type-state">state()</seealso></head></clause>
  </contract>
  <anno>State</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:58.</timestamp>
</module>