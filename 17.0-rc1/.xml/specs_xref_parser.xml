<module name="xref_parser">
<type>
  <name>yecc_ret</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-yecc_ret">yecc_ret()</marker> = {error, term()} | {ok, term()}</typehead></typedecl>
</type>
<spec>
  <name>format_error</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>format_error(Message :: any()) -&gt; [char() | list()]</head></clause>
  </contract>
  <anno>Message</anno>
</spec>
<spec>
  <name>parse</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>parse(Tokens :: list()) -&gt; <seealso marker="#type-yecc_ret">yecc_ret()</seealso></head></clause>
  </contract>
  <anno>Tokens</anno>
</spec>
<spec>
  <name>parse_and_scan</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>parse_and_scan(X1 :: {function() | {atom(), atom()}, [term()]}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {atom(), atom(), [term()]}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-yecc_ret">yecc_ret()</seealso></head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>t2s</name>
  <arity>1</arity>
  <contract/>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:15:41.</timestamp>
</module>