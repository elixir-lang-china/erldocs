<module name="sys_core_fold">
<type>
  <name>error</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-error">error()</marker> = bad_unicode<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bin_argument_order<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bin_left_var_used_in_guard<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bin_opt_alias<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bin_partition<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bin_var_used<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bin_var_used_in_guard<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| embedded_binary_size<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| nomatch_clause_type<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| nomatch_guard<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| nomatch_shadow<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| no_clause_match<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| orig_bin_var_used_in_guard<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| result_ignored<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| useless_building<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {eval_failure, term()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {no_effect, {erlang, atom(), arity()}}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {nomatch_shadow, integer()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {embedded_unit, term(), term()}</typehead></typedecl>
</type>
<spec>
  <name>format_error</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>format_error(X1 :: <seealso marker="#type-error">error()</seealso>) -&gt; nonempty_string()</head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>module</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>module(C_module :: <seealso marker="cerl#type-c_module">cerl:c_module()</seealso>, Opts :: [<seealso marker="compile#type-option">compile:option()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, <seealso marker="cerl#type-c_module">cerl:c_module()</seealso>, [term()]}</head></clause>
  </contract>
  <anno>C_module</anno>
  <anno>Opts</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:17:30.</timestamp>
</module>