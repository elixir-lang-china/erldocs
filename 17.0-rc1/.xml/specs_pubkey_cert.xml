<module name="pubkey_cert">
<spec>
  <name>cert_auth_key_id</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>extensions_list</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>init_validation_state</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>init_validation_state(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DefaultPathLen :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Options :: list()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#path_validation_state{}</head></clause>
  </contract>
  <anno>DefaultPathLen</anno>
  <anno>OTPCertificate</anno>
  <anno>Options</anno>
</spec>
<spec>
  <name>is_fixed_dh_cert</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>is_fixed_dh_cert(OTPCertificate :: #'OTPCertificate'{}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>boolean()</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
</spec>
<spec>
  <name>is_issuer</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>is_issuer(Issuer :: {rdnSequence, term()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Candidate :: {rdnSequence, term()}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>boolean()</head></clause>
  </contract>
  <anno>Candidate</anno>
  <anno>Issuer</anno>
</spec>
<spec>
  <name>is_self_signed</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>is_self_signed(OTPCertificate :: #'OTPCertificate'{}) -&gt; boolean()</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
</spec>
<spec>
  <name>issuer_id</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>issuer_id(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: self | other) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, {integer(), term()}} | {error, issuer_not_found}</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>match_name</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>normalize_general_name</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>normalize_general_name(X1 :: {rdnSequence, term()}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{rdnSequence, term()}</head></clause>
  </contract>
  <anno>X1</anno>
</spec>
<spec>
  <name>prepare_for_next_cert</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>prepare_for_next_cert(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Path_validation_state ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#path_validation_state{}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#path_validation_state{}</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
  <anno>Path_validation_state</anno>
</spec>
<spec>
  <name>select_extension</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>select_extension(Oid :: tuple(), Extension :: [#'Extension'{}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#'Extension'{} | undefined</head></clause>
  </contract>
  <anno>Extension</anno>
  <anno>Oid</anno>
</spec>
<spec>
  <name>time_str_2_gregorian_sec</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>validate_extensions</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>validate_extensions(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Path_validation_state ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#path_validation_state{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFun :: function()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{#path_validation_state{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState :: term()}</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
  <anno>Path_validation_state</anno>
  <anno>UserState</anno>
  <anno>VerifyFun</anno>
</spec>
<spec>
  <name>validate_issuer</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>validate_issuer(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Issuer :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFun :: function()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>Issuer</anno>
  <anno>OTPCertificate</anno>
  <anno>UserState</anno>
  <anno>VerifyFun</anno>
</spec>
<spec>
  <name>validate_names</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>validate_names(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Permit :: no_constraints | list(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Exclude :: list(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Last :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFun :: function()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>Exclude</anno>
  <anno>Last</anno>
  <anno>OTPCertificate</anno>
  <anno>Permit</anno>
  <anno>UserState</anno>
  <anno>VerifyFun</anno>
</spec>
<spec>
  <name>validate_signature</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>validate_signature(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DER :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Key :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>KeyParams :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFun :: function()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>DER</anno>
  <anno>Key</anno>
  <anno>KeyParams</anno>
  <anno>OTPCertificate</anno>
  <anno>UserState</anno>
  <anno>VerifyFun</anno>
</spec>
<spec>
  <name>validate_time</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>validate_time(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFun :: function()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
  <anno>UserState</anno>
  <anno>VerifyFun</anno>
</spec>
<spec>
  <name>verify_data</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>verify_data(DER :: binary()) -&gt; {md5 | sha, binary(), binary()}</head></clause>
  </contract>
  <anno>DER</anno>
</spec>
<spec>
  <name>verify_fun</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>verify_fun(OTPCertificate :: #'OTPCertificate'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Result :: {bad_cert, atom()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {extension, #'Extension'{}}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| valid<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| valid_peer,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>UserState0 :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFun :: function()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>OTPCertificate</anno>
  <anno>Result</anno>
  <anno>UserState0</anno>
  <anno>VerifyFun</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:08.</timestamp>
</module>