<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>disk_log_1</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>disk_log_1.xml</file></header>
<module>disk_log_1</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>dlog_head() = none | {ok, binary()} | mfa()</c></tag>
<item><marker id="type-dlog_head"/> </item>
<tag><c>dlog_mode() = read_only | read_write</c></tag>
<item><marker id="type-dlog_mode"/> </item>
<tag><c>dlog_repair() = truncate | boolean()</c></tag>
<item><marker id="type-dlog_repair"/> </item>
</taglist></section>
<funcs>
<func>
<name>logl(X::[binary()]) -&gt; {iolist(), non_neg_integer()}</name>
<fsummary> </fsummary>

<desc><marker id="logl-1"/>
 </desc></func>
<func>
<name>write_cache(Cache, FName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="write_cache-2"/>
 </desc></func>
<func>
<name>sync(FdC, FName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="sync-2"/>
 </desc></func>
<func>
<name>truncate(FdC, FileName, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="truncate-3"/>
 </desc></func>
<func>
<name>chunk(FdC, FileName, Pos, B, N) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="chunk-5"/>
 </desc></func>
<func>
<name>chunk_read_only(FdC, FileName, Pos, B, N) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="chunk_read_only-5"/>
 </desc></func>
<func>
<name>close(Cache, FileName, X3) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="close-3"/>
 </desc></func>
<func>
<name>int_open(FName, Repair, X3, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="int_open-4"/>
 </desc></func>
<func>
<name>ext_open(FName, Repair, X3, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="ext_open-4"/>
 </desc></func>
<func>
<name>is_head(Bin::binary()) -&gt; yes | yes_not_closed | no</name>
<fsummary> </fsummary>

<desc><marker id="is_head-1"/>
 </desc></func>
<func>
<name>mf_int_open(FName::filename() (see module file), MaxB::integer(), MaxF::integer(), Repair::dlog_repair(), Mode::dlog_mode(), Head::dlog_head(), Version::integer()) -&gt; {ok, #handle{filename=undefined | filename() (see module file), maxB=undefined | pos_integer(), maxF=undefined | pos_integer() | {pos_integer(), pos_integer()}, curB=undefined | non_neg_integer(), curF=undefined | integer(), cur_fdc=undefined | #cache{fd=undefined | fd() (see module file), sz=non_neg_integer(), c=iodata()}, cur_name=undefined | filename() (see module file), cur_cnt=undefined | non_neg_integer(), acc_cnt=undefined | non_neg_integer(), firstPos=undefined | non_neg_integer(), noFull=undefined | non_neg_integer(), accFull=undefined | non_neg_integer()}, integer()} | {repaired, #handle{filename=undefined | filename() (see module file), maxB=undefined | pos_integer(), maxF=undefined | pos_integer() | {pos_integer(), pos_integer()}, curB=undefined | non_neg_integer(), curF=undefined | integer(), cur_fdc=undefined | #cache{fd=undefined | fd() (see module file), sz=non_neg_integer(), c=iodata()}, cur_name=undefined | filename() (see module file), cur_cnt=undefined | non_neg_integer(), acc_cnt=undefined | non_neg_integer(), firstPos=undefined | non_neg_integer(), noFull=undefined | non_neg_integer(), accFull=undefined | non_neg_integer()}, non_neg_integer(), non_neg_integer(), non_neg_integer()}</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_open-7"/>
 </desc></func>
<func>
<name>mf_int_inc(Handle, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_inc-2"/>
 </desc></func>
<func>
<name>mf_int_log(Handle, Bins, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_log-3"/>
 </desc></func>
<func>
<name>mf_int_chunk(Handle, X2, Bin, N) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_chunk-4"/>
 </desc></func>
<func>
<name>mf_int_chunk_read_only(Handle, X2, Bin, N) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_chunk_read_only-4"/>
 </desc></func>
<func>
<name>mf_int_chunk_step(Handle, X2, Step) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_chunk_step-3"/>
 </desc></func>
<func>
<name>mf_write_cache(Handle) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_write_cache-1"/>
 </desc></func>
<func>
<name>mf_sync(Handle) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_sync-1"/>
 </desc></func>
<func>
<name>mf_int_close(Handle, Mode) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_int_close-2"/>
 </desc></func>
<func>
<name>mf_ext_open(FName, MaxB, MaxF, Repair, Mode, Head, Version) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_ext_open-7"/>
 </desc></func>
<func>
<name>mf_ext_inc(Handle, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_ext_inc-2"/>
 </desc></func>
<func>
<name>mf_ext_log(Handle, Bins, Head) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_ext_log-3"/>
 </desc></func>
<func>
<name>mf_ext_close(Handle, Mode) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="mf_ext_close-2"/>
 </desc></func>
<func>
<name>change_size_wrap(Handle, X2, Version) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="change_size_wrap-3"/>
 </desc></func>
<func>
<name>read_index_file(FName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="read_index_file-1"/>
 </desc></func>
<func>
<name>print_index_file(File) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="print_index_file-1"/>
 </desc></func>
<func>
<name>read_size_file(FName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="read_size_file-1"/>
 </desc></func>
<func>
<name>read_size_file_version(FName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="read_size_file_version-1"/>
 </desc></func>
<func>
<name>get_wrap_size(Handle) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="get_wrap_size-1"/>
 </desc></func>
<func>
<name>fwrite(Cache, FN, B, Size) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="fwrite-4"/>
 </desc></func>
<func>
<name>position(Cache, FileName, Pos) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="position-3"/>
 </desc></func>
<func>
<name>truncate_at(FdC, FileName, Pos) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="truncate_at-3"/>
 </desc></func>
<func>
<name>fclose(Cache, FileName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="fclose-2"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>