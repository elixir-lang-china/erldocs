<module name="dialyzer_callgraph">
<type>
  <name>active_digraph</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-active_digraph">active_digraph()</marker> = {d, digraph()} | {e, <seealso marker="ets#type-tid">ets:tid()</seealso>, <seealso marker="ets#type-tid">ets:tid()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>callgraph</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-callgraph">callgraph()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>#callgraph{digraph = digraph(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>active_digraph = undefined | <seealso marker="#type-active_digraph">active_digraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>esc = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>letrec_map = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>name_map = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>rev_name_map = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>rec_var_map = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>self_rec = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>calls = undefined | <seealso marker="ets#type-tid">ets:tid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>race_detection = boolean(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>race_data_server = pid()}</typehead></typedecl>
</type>
<type>
  <name>callgraph_edge</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-callgraph_edge">callgraph_edge()</marker> = {<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>, <seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>label</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-label">label()</marker> = integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>mfa_calls</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-mfa_calls">mfa_calls()</marker> = [{<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>, <seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>}]</typehead></typedecl>
</type>
<type>
  <name>mfa_or_funlbl</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-mfa_or_funlbl">mfa_or_funlbl()</marker> = <seealso marker="#type-label">label()</seealso> | mfa()</typehead></typedecl>
</type>
<type>
  <name>scc</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-scc">scc()</marker> = [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>]</typehead></typedecl>
</type>
<spec>
  <name>add_edges</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>add_edges(Edges :: [<seealso marker="#type-callgraph_edge">callgraph_edge()</seealso>], CG :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>CG</anno>
  <anno>Edges</anno>
</spec>
<spec>
  <name>add_edges</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>add_edges(Edges :: [<seealso marker="#type-callgraph_edge">callgraph_edge()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MFAs :: [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Edges</anno>
  <anno>MFAs</anno>
</spec>
<spec>
  <name>all_nodes</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>all_nodes(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; [mfa()]</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>cleanup</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cleanup(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; <seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>delete</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>delete(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; true</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>dispose_race_server</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>dispose_race_server(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>duplicate</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>duplicate(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; <seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>finalize</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>finalize(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; {[<seealso marker="#type-scc">scc()</seealso>], <seealso marker="#type-callgraph">callgraph()</seealso>}</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_behaviour_api_calls</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_behaviour_api_calls(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{mfa(), mfa()}]</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_depends_on</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>get_depends_on(SCC :: <seealso marker="#type-scc">scc()</seealso> | module(), Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-scc">scc()</seealso>]</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>SCC</anno>
</spec>
<spec>
  <name>get_digraph</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_digraph(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; digraph()</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_named_tables</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_named_tables(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; [string()]</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_public_tables</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_public_tables(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; [<seealso marker="#type-label">label()</seealso>]</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_race_code</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_race_code(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; dict()</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_race_detection</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_race_detection(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; boolean()</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>get_required_by</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>get_required_by(SCC :: <seealso marker="#type-scc">scc()</seealso> | module(), Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-scc">scc()</seealso>]</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>SCC</anno>
</spec>
<spec>
  <name>in_neighbours</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>in_neighbours(Label :: <seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>none | [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>, ...]</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Label</anno>
</spec>
<spec>
  <name>is_escaping</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>is_escaping(Label :: <seealso marker="#type-label">label()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>boolean()</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Label</anno>
</spec>
<spec>
  <name>is_self_rec</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>is_self_rec(MfaOrLabel :: <seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>boolean()</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>MfaOrLabel</anno>
</spec>
<spec>
  <name>lookup_call_site</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup_call_site(Label :: <seealso marker="#type-label">label()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>error | {ok, [term()]}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Label</anno>
</spec>
<spec>
  <name>lookup_label</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup_label(MFA :: <seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>error | {ok, integer()}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>MFA</anno>
</spec>
<spec>
  <name>lookup_letrec</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup_letrec(Label :: <seealso marker="#type-label">label()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>error | {ok, <seealso marker="#type-label">label()</seealso>}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Label</anno>
</spec>
<spec>
  <name>lookup_name</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup_name(Label :: <seealso marker="#type-label">label()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>error | {ok, mfa()}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Label</anno>
</spec>
<spec>
  <name>lookup_rec_var</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup_rec_var(Label :: <seealso marker="#type-label">label()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>error | {ok, mfa()}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Label</anno>
</spec>
<spec>
  <name>module_deps</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>module_deps(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; dict()</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>module_postorder_from_funs</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>module_postorder_from_funs(Funs :: [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[module()], <seealso marker="#type-callgraph">callgraph()</seealso>}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Funs</anno>
</spec>
<spec>
  <name>modules</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>modules(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; [module()]</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
</spec>
<spec>
  <name>non_local_calls</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>non_local_calls(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; <seealso marker="#type-mfa_calls">mfa_calls()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>put_behaviour_api_calls</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_behaviour_api_calls(Calls :: [{mfa(), mfa()}],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Calls</anno>
</spec>
<spec>
  <name>put_digraph</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_digraph(Digraph :: digraph(), Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Digraph</anno>
</spec>
<spec>
  <name>put_named_tables</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_named_tables(NamedTables :: [string()],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>NamedTables</anno>
</spec>
<spec>
  <name>put_public_tables</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_public_tables(PublicTables :: [<seealso marker="#type-label">label()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>PublicTables</anno>
</spec>
<spec>
  <name>put_race_code</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_race_code(RaceCode :: dict(), Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>RaceCode</anno>
</spec>
<spec>
  <name>put_race_detection</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_race_detection(RaceDetection :: boolean(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>RaceDetection</anno>
</spec>
<spec>
  <name>race_code_new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>race_code_new(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt; <seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>remove_external</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>remove_external(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-callgraph">callgraph()</seealso>, [tuple()]}</head></clause>
  </contract>
  <anno>Callgraph</anno>
</spec>
<spec>
  <name>renew_race_code</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>renew_race_code(Races :: <seealso marker="dialyzer_races#type-races">dialyzer_races:races()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Races</anno>
</spec>
<spec>
  <name>renew_race_info</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>renew_race_info(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>RaceCode :: dict(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>PublicTables :: [<seealso marker="#type-label">label()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NamedTables :: [string()]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>NamedTables</anno>
  <anno>PublicTables</anno>
  <anno>RaceCode</anno>
</spec>
<spec>
  <name>renew_race_public_tables</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>renew_race_public_tables(VarLabel :: <seealso marker="#type-label">label()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-callgraph">callgraph()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>VarLabel</anno>
</spec>
<spec>
  <name>reset_from_funs</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>reset_from_funs(Funs :: [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-scc">scc()</seealso>], <seealso marker="#type-callgraph">callgraph()</seealso>}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Funs</anno>
</spec>
<spec>
  <name>scan_core_tree</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>scan_core_tree(Tree :: <seealso marker="cerl#type-c_module">cerl:c_module()</seealso>, Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>], [<seealso marker="#type-callgraph_edge">callgraph_edge()</seealso>]}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Tree</anno>
</spec>
<spec>
  <name>strip_module_deps</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>strip_module_deps(ModDeps :: dict(), StripSet :: set()) -&gt; dict()</head></clause>
  </contract>
  <anno>ModDeps</anno>
  <anno>StripSet</anno>
</spec>
<spec>
  <name>to_dot</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>to_dot(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>, File :: <seealso marker="file#type-filename">file:filename()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>File</anno>
</spec>
<spec>
  <name>to_ps</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>to_ps(Callgraph :: <seealso marker="#type-callgraph">callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>File :: <seealso marker="file#type-filename">file:filename()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Args :: string()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>Args</anno>
  <anno>Callgraph</anno>
  <anno>File</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:58.</timestamp>
</module>