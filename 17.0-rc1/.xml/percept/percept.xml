<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>percept</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>percept.xml</file></header>
<module>percept</module>
<modulesummary>Percept - Erlang Concurrency Profiling Tool.</modulesummary>
<description>
<p>Percept - Erlang Concurrency Profiling Tool</p>
 
 	<p>This module provides the user interface for the application.
 </p></description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>percept_option() = procs | ports | exclusive</c></tag>
<item><marker id="type-percept_option"/> </item>
</taglist></section>
<funcs>
<func>
<name>profile(Filename::string()) -&gt; {ok, Port} | {already_started, Port}</name>
<fsummary> </fsummary>

<desc><marker id="profile-1"/>
 <p><em>See also:</em> <seealso marker="percept_profile">percept_profile</seealso>.</p>
</desc></func>
<func>
<name>profile(Filename::string(), Options::[percept_option()]) -&gt; {ok, Port} | {already_started, Port}</name>
<fsummary> </fsummary>

<desc><marker id="profile-2"/>
 <p><em>See also:</em> <seealso marker="percept_profile">percept_profile</seealso>.</p>
</desc></func>
<func>
<name>profile(Filename::string(), MFA::mfa(), Options::[percept_option()]) -&gt; ok | {already_started, Port} | {error, not_started}</name>
<fsummary> </fsummary>

<desc><marker id="profile-3"/>
 <p><em>See also:</em> <seealso marker="percept_profile">percept_profile</seealso>.</p>
</desc></func>
<func>
<name>stop_profile() -&gt; ok | {error, not_started}</name>
<fsummary> </fsummary>

<desc><marker id="stop_profile-0"/>
 <p><em>See also:</em> <seealso marker="percept_profile">percept_profile</seealso>.</p>
</desc></func>
<func>
<name>analyze(Filename::string()) -&gt; ok | {error, Reason}</name>
<fsummary>Analyze file.</fsummary>

<desc><marker id="analyze-1"/>

<p>Analyze file.</p>
</desc></func>
<func>
<name>start_webserver() -&gt; {started, Hostname, Port} | {error, Reason}</name>
<fsummary>Starts webserver.</fsummary>
<type>
<v>Hostname = string()</v><v>Port = integer()</v><v>Reason = term()</v></type>
<desc><marker id="start_webserver-0"/>

<p>Starts webserver.</p>
</desc></func>
<func>
<name>start_webserver(Port::integer()) -&gt; {started, Hostname, AssignedPort} | {error, Reason}</name>
<fsummary>Starts webserver.</fsummary>
<type>
<v>Hostname = string()</v><v>AssignedPort = integer()</v><v>Reason = term()</v></type>
<desc><marker id="start_webserver-1"/>

<p>Starts webserver. If port number is 0, an available port number will
 	be assigned by inets.</p>
</desc></func>
<func>
<name>stop_webserver() -&gt; ok | {error, not_started}</name>
<fsummary>Stops webserver.</fsummary>

<desc><marker id="stop_webserver-0"/>

<p>Stops webserver.</p>
</desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>