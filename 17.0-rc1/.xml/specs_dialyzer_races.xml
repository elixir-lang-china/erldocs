<module name="dialyzer_races">
<type>
  <name>args</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-args">args()</marker> = [<seealso marker="#type-label_type">label_type()</seealso> | [string()]]</typehead></typedecl>
</type>
<type>
  <name>call</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-call">call()</marker> = whereis<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| register<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| unregister<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ets_new<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ets_lookup<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ets_insert<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| mnesia_dirty_read1<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| mnesia_dirty_read2<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| mnesia_dirty_write1<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| mnesia_dirty_write2<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| function_call</typehead></typedecl>
</type>
<type>
  <name>case_tags</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-case_tags">case_tags()</marker> = beg_case<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| #beg_clause{arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined | <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| #end_clause{arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined | <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| #end_case{clauses = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| [#end_clause{arg = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}]}</typehead></typedecl>
</type>
<type>
  <name>code</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-code">code()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[#dep_call{call_name = undefined | <seealso marker="#type-dep_calls">dep_calls()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = undefined | <seealso marker="#type-args">args()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>arg_types = undefined | [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>vars = undefined | [<seealso marker="#type-core_vars">core_vars()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>state = undefined | term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>file_line = undefined | <seealso marker="#type-file_line">file_line()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>var_map = undefined | dict()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#fun_call{caller = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="dialyzer_callgraph#type-mfa_or_funlbl">dialyzer_callgraph:mfa_or_funlbl()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>callee = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="dialyzer_callgraph#type-mfa_or_funlbl">dialyzer_callgraph:mfa_or_funlbl()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>arg_types = undefined | [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>vars = undefined | [<seealso marker="#type-core_vars">core_vars()</seealso>]} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#warn_call{call_name = undefined | <seealso marker="#type-warn_calls">warn_calls()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = undefined | <seealso marker="#type-args">args()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>var_map = undefined | dict()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#curr_fun{status = undefined | in | out,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>mfa = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="dialyzer_callgraph#type-mfa_or_funlbl">dialyzer_callgraph:mfa_or_funlbl()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>label = undefined | <seealso marker="#type-label">label()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>def_vars = undefined | [<seealso marker="#type-core_vars">core_vars()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>arg_types = undefined | [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>call_vars = undefined | [<seealso marker="#type-core_vars">core_vars()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>var_map = undefined | dict()} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#let_tag{var = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-case_tags">case_tags()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-race_tag">race_tag()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>core_args</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-core_args">core_args()</marker> = [<seealso marker="#type-core_vars">core_vars()</seealso>] | empty</typehead></typedecl>
</type>
<type>
  <name>core_vars</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-core_vars">core_vars()</marker> = <seealso marker="cerl#type-cerl">cerl:cerl()</seealso> | no_arg | bypassed</typehead></typedecl>
</type>
<type>
  <name>dep_calls</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dep_calls">dep_calls()</marker> = whereis | ets_lookup | mnesia_dirty_read</typehead></typedecl>
</type>
<type>
  <name>file_line</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_line">file_line()</marker> = {<seealso marker="file#type-filename">file:filename()</seealso>, integer() &gt;= 0}</typehead></typedecl>
</type>
<type>
  <name>label</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-label">label()</marker> = integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>label_type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-label_type">label_type()</marker> = <seealso marker="#type-label">label()</seealso> | [<seealso marker="#type-label">label()</seealso>] | {<seealso marker="#type-label">label()</seealso>} | no_label</typehead></typedecl>
</type>
<type>
  <name>race_tag</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-race_tag">race_tag()</marker> = whereis_register<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| whereis_unregister<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ets_lookup_insert<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| mnesia_dirty_read_write</typehead></typedecl>
</type>
<type>
  <name>races</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-races">races()</marker></typehead></typedecl>
</type>
<type>
  <name>table</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-table">table()</marker> = {named, <seealso marker="#type-table_var">table_var()</seealso>, [string()]} | other | no_t</typehead></typedecl>
</type>
<type>
  <name>table_var</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-table_var">table_var()</marker> = <seealso marker="#type-label">label()</seealso> | no_label</typehead></typedecl>
</type>
<type>
  <name>var_to_map1</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-var_to_map1">var_to_map1()</marker> = <seealso marker="#type-core_vars">core_vars()</seealso> | [<seealso marker="cerl#type-cerl">cerl:cerl()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>warn_calls</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-warn_calls">warn_calls()</marker> = register<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| unregister<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ets_insert<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| mnesia_dirty_write</typehead></typedecl>
</type>
<spec>
  <name>beg_clause_new</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>beg_clause_new(Arg :: <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pats :: <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Guard :: <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#beg_clause{arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined | <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}</head></clause>
  </contract>
  <anno>Arg</anno>
  <anno>Guard</anno>
  <anno>Pats</anno>
</spec>
<spec>
  <name>cleanup</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>cleanup(Races :: <seealso marker="#type-races">races()</seealso>) -&gt; <seealso marker="#type-races">races()</seealso></head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>end_case_new</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>end_case_new(End_clause ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[#end_clause{arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined | <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#end_case{clauses = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| [#end_clause{arg = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}]}</head></clause>
  </contract>
  <anno>End_clause</anno>
</spec>
<spec>
  <name>end_clause_new</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>end_clause_new(Arg :: <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Pats :: <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Guard :: <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#end_clause{arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>pats = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>guard = undefined | <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>}</head></clause>
  </contract>
  <anno>Arg</anno>
  <anno>Guard</anno>
  <anno>Pats</anno>
</spec>
<spec>
  <name>format_args</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>format_args(ArgList :: [<seealso marker="#type-core_vars">core_vars()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>TypeList :: [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>State :: <seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Call :: <seealso marker="#type-call">call()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-args">args()</seealso></head></clause>
  </contract>
  <anno>ArgList</anno>
  <anno>Call</anno>
  <anno>State</anno>
  <anno>TypeList</anno>
</spec>
<spec>
  <name>get_curr_fun</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_curr_fun(Races :: <seealso marker="#type-races">races()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_callgraph#type-mfa_or_funlbl">dialyzer_callgraph:mfa_or_funlbl()</seealso></head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_curr_fun_args</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_curr_fun_args(Races :: <seealso marker="#type-races">races()</seealso>) -&gt; <seealso marker="#type-core_args">core_args()</seealso></head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_new_table</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_new_table(Races :: <seealso marker="#type-races">races()</seealso>) -&gt; <seealso marker="#type-table">table()</seealso></head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_race_analysis</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_race_analysis(Races :: <seealso marker="#type-races">races()</seealso>) -&gt; boolean()</head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_race_list</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_race_list(Races :: <seealso marker="#type-races">races()</seealso>) -&gt; <seealso marker="#type-code">code()</seealso></head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_race_list_and_size</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_race_list_and_size(Races :: <seealso marker="#type-races">races()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-code">code()</seealso>, integer() &gt;= 0}</head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_race_list_size</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_race_list_size(Races :: <seealso marker="#type-races">races()</seealso>) -&gt; integer() &gt;= 0</head></clause>
  </contract>
  <anno>Races</anno>
</spec>
<spec>
  <name>get_race_warnings</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>get_race_warnings(Races :: <seealso marker="#type-races">races()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>State :: <seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-races">races()</seealso>, <seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso>}</head></clause>
  </contract>
  <anno>Races</anno>
  <anno>State</anno>
</spec>
<spec>
  <name>let_tag_new</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>let_tag_new(Var :: <seealso marker="#type-var_to_map1">var_to_map1()</seealso>, Arg :: <seealso marker="#type-var_to_map1">var_to_map1()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#let_tag{var = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>arg = undefined | <seealso marker="#type-var_to_map1">var_to_map1()</seealso>}</head></clause>
  </contract>
  <anno>Arg</anno>
  <anno>Var</anno>
</spec>
<spec>
  <name>new</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>new() -&gt; <seealso marker="#type-races">races()</seealso></head></clause>
  </contract>
</spec>
<spec>
  <name>put_curr_fun</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>put_curr_fun(CurrFun :: <seealso marker="dialyzer_callgraph#type-mfa_or_funlbl">dialyzer_callgraph:mfa_or_funlbl()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CurrFunLabel :: <seealso marker="#type-label">label()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Races :: <seealso marker="#type-races">races()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-races">races()</seealso></head></clause>
  </contract>
  <anno>CurrFun</anno>
  <anno>CurrFunLabel</anno>
  <anno>Races</anno>
</spec>
<spec>
  <name>put_fun_args</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_fun_args(Args :: <seealso marker="#type-core_args">core_args()</seealso>, Races :: <seealso marker="#type-races">races()</seealso>) -&gt; <seealso marker="#type-races">races()</seealso></head></clause>
  </contract>
  <anno>Args</anno>
  <anno>Races</anno>
</spec>
<spec>
  <name>put_race_analysis</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>put_race_analysis(Analysis :: boolean(), Races :: <seealso marker="#type-races">races()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-races">races()</seealso></head></clause>
  </contract>
  <anno>Analysis</anno>
  <anno>Races</anno>
</spec>
<spec>
  <name>put_race_list</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>put_race_list(RaceList :: <seealso marker="#type-code">code()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>RaceListSize :: integer() &gt;= 0,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Races :: <seealso marker="#type-races">races()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-races">races()</seealso></head></clause>
  </contract>
  <anno>RaceList</anno>
  <anno>RaceListSize</anno>
  <anno>Races</anno>
</spec>
<spec>
  <name>race</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>race(State :: <seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso></head></clause>
  </contract>
  <anno>State</anno>
</spec>
<spec>
  <name>store_race_call</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>store_race_call(Fun :: <seealso marker="dialyzer_callgraph#type-mfa_or_funlbl">dialyzer_callgraph:mfa_or_funlbl()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ArgTypes :: [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Args :: [<seealso marker="#type-core_vars">core_vars()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>FileLine :: <seealso marker="#type-file_line">file_line()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>State :: <seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_dataflow#type-state">dialyzer_dataflow:state()</seealso></head></clause>
  </contract>
  <anno>ArgTypes</anno>
  <anno>Args</anno>
  <anno>FileLine</anno>
  <anno>Fun</anno>
  <anno>State</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:58.</timestamp>
</module>