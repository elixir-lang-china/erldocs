<module name="core_lib">
<spec>
  <name>get_anno</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_anno(C :: <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>) -&gt; term()</head></clause>
  </contract>
  <anno>C</anno>
</spec>
<spec>
  <name>is_literal</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>is_literal(C_literal :: <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>) -&gt; boolean()</head></clause>
  </contract>
  <anno>C_literal</anno>
</spec>
<spec>
  <name>is_literal_list</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>is_literal_list(Es :: [<seealso marker="cerl#type-cerl">cerl:cerl()</seealso>]) -&gt; boolean()</head></clause>
  </contract>
  <anno>Es</anno>
</spec>
<spec>
  <name>is_var_used</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>is_var_used(V :: <seealso marker="cerl#type-var_name">cerl:var_name()</seealso>, B :: <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>) -&gt; boolean()</head></clause>
  </contract>
  <anno>B</anno>
  <anno>V</anno>
</spec>
<spec>
  <name>literal_value</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>literal_value(C_literal :: <seealso marker="cerl#type-c_literal">cerl:c_literal()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="cerl#type-c_binary">cerl:c_binary()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="cerl#type-c_cons">cerl:c_cons()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="cerl#type-c_tuple">cerl:c_tuple()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>C_literal</anno>
</spec>
<spec>
  <name>make_values</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>make_values(Es :: [<seealso marker="cerl#type-cerl">cerl:cerl()</seealso>] | <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>) -&gt; <seealso marker="cerl#type-cerl">cerl:cerl()</seealso></head></clause>
  </contract>
  <anno>Es</anno>
</spec>
<spec>
  <name>set_anno</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>set_anno(C :: <seealso marker="cerl#type-cerl">cerl:cerl()</seealso>, A :: term()) -&gt; <seealso marker="cerl#type-cerl">cerl:cerl()</seealso></head></clause>
  </contract>
  <anno>A</anno>
  <anno>C</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:17:29.</timestamp>
</module>