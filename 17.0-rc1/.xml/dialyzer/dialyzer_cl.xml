<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>dialyzer_cl</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>dialyzer_cl.xml</file></header>
<module>dialyzer_cl</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>anal_type() = succ_typings | plt_build</c></tag>
<item><marker id="type-anal_type"/> </item>
<tag><c>anal_type1() = anal_type() | plt_add | plt_check | plt_remove</c></tag>
<item><marker id="type-anal_type1"/> </item>
<tag><c>dial_define() = {atom(), term()}</c></tag>
<item><marker id="type-dial_define"/> </item>
<tag><c>dial_ret() = 0 | 1 | 2</c></tag>
<item><marker id="type-dial_ret"/> </item>
<tag><c>dial_warn_tag() = warn_return_no_exit | warn_return_only_exit | warn_not_called | warn_non_proper_list | warn_matching | warn_opaque | warn_fun_app | warn_failing_call | warn_bin_construction | warn_contract_types | warn_contract_syntax | warn_contract_not_equal | warn_contract_subtype | warn_contract_supertype | warn_callgraph | warn_umatched_return | warn_race_condition | warn_behaviour | warn_contract_range | warn_undefined_callbacks</c></tag>
<item><marker id="type-dial_warn_tag"/> </item>
<tag><c>dial_warning() = {dial_warn_tag(), file_line(), {atom(), [term()]}}</c></tag>
<item><marker id="type-dial_warning"/> </item>
<tag><c>file_line() = {filename() (see module file), non_neg_integer()}</c></tag>
<item><marker id="type-file_line"/> </item>
<tag><c>fopt() = basename | fullpath</c></tag>
<item><marker id="type-fopt"/> </item>
<tag><c>format() = formatted | raw</c></tag>
<item><marker id="type-format"/> </item>
<tag><c>ordset(T) = [T]</c></tag>
<item><marker id="type-ordset"/> </item>
<tag><c>rep_mode() = quiet | normal | verbose</c></tag>
<item><marker id="type-rep_mode"/> </item>
<tag><c>solver() = v1 | v2</c></tag>
<item><marker id="type-solver"/> </item>
<tag><c>start_from() = byte_code | src_code</c></tag>
<item><marker id="type-start_from"/> </item>
</taglist></section>
<funcs>
<func>
<name>start(Options::#options{files=[filename() (see module file)], files_rec=[filename() (see module file)], analysis_type=anal_type1(), timing=boolean() | debug, defines=[dial_define()], from=start_from(), get_warnings=boolean() | maybe, init_plts=[filename() (see module file)], include_dirs=[filename() (see module file)], output_plt=none | filename() (see module file), legal_warnings=ordset(dial_warn_tag()), report_mode=rep_mode(), erlang_mode=boolean(), use_contracts=boolean(), output_file=none | filename() (see module file), output_format=format(), filename_opt=fopt(), callgraph_file=filename() (see module file), check_plt=boolean(), solvers=[solver()]}) -&gt; {dial_ret(), [dial_warning()]}</name>
<fsummary> </fsummary>

<desc><marker id="start-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>