<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>eunit_serial</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>eunit_serial.xml</file></header>
<module>eunit_serial</module>
<modulesummary>Event serializing and multiplexing process, to be used as the
  main "supervisor" process for en EUnit test runner.</modulesummary>
<description>
<p>Event serializing and multiplexing process, to be used as the
  main "supervisor" process for en EUnit test runner. See eunit_proc
  for details about the events that will be sent to the listeners
  (provided to this process at startup). This process guarantees that
  listeners will receive events in order, even if tests execute in
  parallel. For every received 'begin' event, there will be exactly one
  'end' or 'cancel' event. For a cancelling event with identifier Id,
  no further events will arrive whose identifiers have Id as prefix.</p></description>
<funcs>
<func>
<name>start(Pids) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="start-1"/>
 </desc></func></funcs>
<section><title>See also</title><p><seealso marker="eunit">eunit</seealso></p></section>
<authors>

<aname>Richard Carlsson</aname>
<email>carlsson.richard@gmail.com</email></authors></erlref>