<module name="pubkey_pem">
<type>
  <name>pem_entry</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-pem_entry">pem_entry()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-pki_asn1_type">pki_asn1_type()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>not_encrypted | {Cipher :: string(), Salt :: binary()}}</typehead></typedecl>
  <anno>Cipher</anno>
  <anno>Salt</anno>
</type>
<type>
  <name>pki_asn1_type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-pki_asn1_type">pki_asn1_type()</marker> = 'Certificate'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'RSAPrivateKey'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'RSAPublicKey'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'DSAPrivateKey'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'DSAPublicKey'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'DHParameter'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'SubjectPublicKeyInfo'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'CertificationRequest'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| 'CertificateList'</typehead></typedecl>
</type>
<spec>
  <name>cipher</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>cipher(Der :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Cipher :: string(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Salt :: iodata() | #'PBES2-params'{}},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Password :: string()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary()</head></clause>
  </contract>
  <anno>Cipher</anno>
  <anno>Der</anno>
  <anno>Password</anno>
  <anno>Salt</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>decipher</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>decipher(X1 ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-pki_asn1_type">pki_asn1_type()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DerEncrypted :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{Cipher :: string(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Salt :: iodata() | #'PBES2-params'{}}},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Password :: string()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Der :: binary()</head></clause>
  </contract>
  <anno>Cipher</anno>
  <anno>Der</anno>
  <anno>DerEncrypted</anno>
  <anno>Password</anno>
  <anno>Salt</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>decode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>decode(Bin :: binary()) -&gt; [<seealso marker="#type-pem_entry">pem_entry()</seealso>]</head></clause>
  </contract>
  <anno>Bin</anno>
</spec>
<spec>
  <name>encode</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>encode(PemEntries :: [<seealso marker="#type-pem_entry">pem_entry()</seealso>]) -&gt; iolist()</head></clause>
  </contract>
  <anno>PemEntries</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:16:08.</timestamp>
</module>