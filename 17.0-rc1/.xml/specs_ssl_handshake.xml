<module name="ssl_handshake">
<type>
  <name>certdb_ref</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-certdb_ref">certdb_ref()</marker> = reference()</typehead></typedecl>
</type>
<type>
  <name>cipher</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-cipher">cipher()</marker> = null<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| rc4_128<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| idea_cbc<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| des40_cbc<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| des_cbc<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| '3des_ede_cbc'<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| aes_128_cbc<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| aes_256_cbc</typehead></typedecl>
</type>
<type>
  <name>db_handle</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-db_handle">db_handle()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>der_cert</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-der_cert">der_cert()</marker> = binary()</typehead></typedecl>
</type>
<type>
  <name>erl_cipher_suite</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-erl_cipher_suite">erl_cipher_suite()</marker> = {<seealso marker="#type-key_algo">key_algo()</seealso>, <seealso marker="#type-cipher">cipher()</seealso>, <seealso marker="#type-hash">hash()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>hash</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-hash">hash()</marker> = null | sha | md5 | sha224 | sha256 | sha384 | sha512</typehead></typedecl>
</type>
<type>
  <name>key_algo</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-key_algo">key_algo()</marker> = null<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| rsa<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| dhe_rsa<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| dhe_dss<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ecdhe_ecdsa<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ecdh_ecdsa<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ecdh_rsa<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| srp_rsa<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| srp_dss<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| psk<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| dhe_psk<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| rsa_psk<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| dh_anon<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| ecdh_anon<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| srp_anon</typehead></typedecl>
</type>
<type>
  <name>oid</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-oid">oid()</marker> = tuple()</typehead></typedecl>
</type>
<type>
  <name>public_key_info</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-public_key_info">public_key_info()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-oid">oid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#'RSAPublicKey'{} | integer() | #'ECPoint'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-public_key_params">public_key_params()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>public_key_params</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-public_key_params">public_key_params()</marker> = #'Dss-Parms'{}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {namedCurve, <seealso marker="#type-oid">oid()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| #'ECParameters'{}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| term()</typehead></typedecl>
</type>
<type>
  <name>tls_handshake_history</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-tls_handshake_history">tls_handshake_history()</marker> = {[binary()], [binary()]}</typehead></typedecl>
</type>
<type>
  <name>tls_version</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-tls_version">tls_version()</marker> = {integer(), integer()}</typehead></typedecl>
</type>
<spec>
  <name>available_suites</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>certificate</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>certificate(OwnCert :: <seealso marker="#type-der_cert">der_cert()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbHandle :: <seealso marker="#type-db_handle">db_handle()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbRef :: <seealso marker="#type-certdb_ref">certdb_ref()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X4 :: client | server) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#certificate{} | #alert{}</head></clause>
  </contract>
  <anno>CertDbHandle</anno>
  <anno>CertDbRef</anno>
  <anno>OwnCert</anno>
  <anno>X4</anno>
</spec>
<spec>
  <name>certificate_request</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>certificate_request(CipherSuite :: <seealso marker="#type-erl_cipher_suite">erl_cipher_suite()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbHandle :: <seealso marker="#type-db_handle">db_handle()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbRef :: <seealso marker="#type-certdb_ref">certdb_ref()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#certificate_request{}</head></clause>
  </contract>
  <anno>CertDbHandle</anno>
  <anno>CertDbRef</anno>
  <anno>CipherSuite</anno>
  <anno>Version</anno>
</spec>
<spec>
  <name>certificate_verify</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>certificate_verify(Signature :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>PublicKeyInfo :: <seealso marker="#type-public_key_info">public_key_info()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>HashSign :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MasterSecret :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X6 :: <seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>valid | #alert{}</head></clause>
  </contract>
  <anno>HashSign</anno>
  <anno>MasterSecret</anno>
  <anno>PublicKeyInfo</anno>
  <anno>Signature</anno>
  <anno>Version</anno>
  <anno>X6</anno>
</spec>
<spec>
  <name>certify</name>
  <arity>7</arity>
  <contract>
    <clause>
      <head>certify(Certificate :: #certificate{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbHandle :: <seealso marker="#type-db_handle">db_handle()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CertDbRef :: <seealso marker="#type-certdb_ref">certdb_ref()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MaxPathLen :: integer() | nolimit,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Verify :: verify_peer | verify_none,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>VerifyFunAndState :: {function(), term},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Role :: client | server) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-der_cert">der_cert()</seealso>, <seealso marker="#type-public_key_info">public_key_info()</seealso>} | #alert{}</head></clause>
  </contract>
  <anno>CertDbHandle</anno>
  <anno>CertDbRef</anno>
  <anno>Certificate</anno>
  <anno>MaxPathLen</anno>
  <anno>Role</anno>
  <anno>Verify</anno>
  <anno>VerifyFunAndState</anno>
</spec>
<spec>
  <name>cipher_suites</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>client_certificate_verify</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>client_certificate_verify(OwnCert :: undefined | <seealso marker="#type-der_cert">der_cert()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MasterSecret :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X4 :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>PrivateKey :: <seealso marker="public_key#type-private_key">public_key:private_key()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X6 :: <seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#certificate_verify{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ignore |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#alert{}</head></clause>
  </contract>
  <anno>MasterSecret</anno>
  <anno>OwnCert</anno>
  <anno>PrivateKey</anno>
  <anno>Version</anno>
  <anno>X4</anno>
  <anno>X6</anno>
</spec>
<spec>
  <name>client_hello_extensions</name>
  <arity>6</arity>
  <contract/>
</spec>
<spec>
  <name>decode_client_key</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>decode_client_key(ClientKey :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seealso marker="#type-key_algo">key_algo()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#encrypted_premaster_secret{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_diffie_hellman_public{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_ec_diffie_hellman_public{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_psk_identity{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_dhe_psk_identity{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_rsa_psk_identity{} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_srp_public{}</head></clause>
  </contract>
  <anno>ClientKey</anno>
  <anno>Type</anno>
  <anno>Version</anno>
</spec>
<spec>
  <name>decode_handshake</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>decode_hello_extensions</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>decode_hello_extensions(Extensions :: {client, binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| binary()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#hello_extensions{}</head></clause>
  </contract>
  <anno>Extensions</anno>
</spec>
<spec>
  <name>decode_server_key</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>decode_server_key(ServerKey :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Type :: <seealso marker="#type-key_algo">key_algo()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#server_key_params{}</head></clause>
  </contract>
  <anno>ServerKey</anno>
  <anno>Type</anno>
  <anno>Version</anno>
</spec>
<spec>
  <name>decode_suites</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>decode_suites(X1 :: '2_bytes' | '3_bytes', Dec :: binary()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>list()</head></clause>
  </contract>
  <anno>Dec</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>encode_client_protocol_negotiation</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>encode_handshake</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>encode_hello_extensions</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>encode_protocols_advertised_on_server</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>finished</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>finished(Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Role :: client | server,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>PrfAlgo :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MasterSecret :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X5 :: <seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#finished{}</head></clause>
  </contract>
  <anno>MasterSecret</anno>
  <anno>PrfAlgo</anno>
  <anno>Role</anno>
  <anno>Version</anno>
  <anno>X5</anno>
</spec>
<spec>
  <name>handle_client_hello_extensions</name>
  <arity>9</arity>
  <contract/>
</spec>
<spec>
  <name>handle_server_hello_extensions</name>
  <arity>9</arity>
  <contract/>
</spec>
<spec>
  <name>hello_request</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>hello_request() -&gt; #hello_request{}</head></clause>
  </contract>
</spec>
<spec>
  <name>init_handshake_history</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>init_handshake_history() -&gt; <seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso></head></clause>
  </contract>
</spec>
<spec>
  <name>key_exchange</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>key_exchange(X1 :: client | server,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X3 :: {premaster_secret, binary(), <seealso marker="#type-public_key_info">public_key_info()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {dh, binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {dh,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{binary(), binary()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#'DHParameter'{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{HashAlgo :: atom(), SignAlgo :: atom()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="public_key#type-private_key">public_key:private_key()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {ecdh, #'ECPrivateKey'{}}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {psk, binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {dhe_psk, binary(), binary()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {srp,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{binary(), binary()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#srp_user{generator = undefined | binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>prime = undefined | binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>salt = undefined | binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>verifier = undefined | binary()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{HashAlgo :: atom(), SignAlgo :: atom()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="public_key#type-private_key">public_key:private_key()</seealso>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#client_key_exchange{} | #server_key_exchange{}</head></clause>
  </contract>
  <anno>HashAlgo</anno>
  <anno>SignAlgo</anno>
  <anno>Version</anno>
  <anno>X1</anno>
  <anno>X3</anno>
</spec>
<spec>
  <name>master_secret</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>master_secret(RecordCB :: atom(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Session :: #session{} | binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Connection_states :: #connection_states{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Role :: client | server) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{binary(), #connection_states{}} | #alert{}</head></clause>
  </contract>
  <anno>Connection_states</anno>
  <anno>RecordCB</anno>
  <anno>Role</anno>
  <anno>Session</anno>
  <anno>Version</anno>
</spec>
<spec>
  <name>next_protocol</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>next_protocol(SelectedProtocol :: binary()) -&gt; #next_protocol{}</head></clause>
  </contract>
  <anno>SelectedProtocol</anno>
</spec>
<spec>
  <name>premaster_secret</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>premaster_secret</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>premaster_secret</name>
  <arity>4</arity>
  <contract/>
</spec>
<spec>
  <name>prf</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>prf(X1 :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/>Secret :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/>Label :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/>Seed :: [binary()],<br/><nbsp/><nbsp/><nbsp/><nbsp/>WantedLength :: integer() &gt;= 0) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, binary()} | {error, undefined}</head></clause>
  </contract>
  <anno>Label</anno>
  <anno>Secret</anno>
  <anno>Seed</anno>
  <anno>WantedLength</anno>
  <anno>X1</anno>
</spec>
<spec>
  <name>select_cert_hashsign</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>select_cert_hashsign(HashSign :: #hash_sign_algos{} | undefined,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: <seealso marker="#type-oid">oid()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X3 :: <seealso marker="#type-tls_version">tls_version()</seealso> | {undefined, undefined}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{atom(), atom()}</head></clause>
  </contract>
  <anno>HashSign</anno>
  <anno>X2</anno>
  <anno>X3</anno>
</spec>
<spec>
  <name>select_curve</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>select_hashsign</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>select_hashsign(Hash_sign_algos :: #hash_sign_algos{} | undefined,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Cert :: undefined | binary()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[{atom(), atom()}] | undefined</head></clause>
  </contract>
  <anno>Cert</anno>
  <anno>Hash_sign_algos</anno>
</spec>
<spec>
  <name>select_session</name>
  <arity>10</arity>
  <contract/>
</spec>
<spec>
  <name>select_version</name>
  <arity>3</arity>
  <contract/>
</spec>
<spec>
  <name>server_hello</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>server_hello(Session :: #session{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Connection_states :: #connection_states{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Hello_extensions :: #hello_extensions{}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#server_hello{}</head></clause>
  </contract>
  <anno>Connection_states</anno>
  <anno>Hello_extensions</anno>
  <anno>Session</anno>
  <anno>Version</anno>
</spec>
<spec>
  <name>server_hello_done</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>server_hello_done() -&gt; #server_hello_done{}</head></clause>
  </contract>
</spec>
<spec>
  <name>server_key_exchange_hash</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>server_key_exchange_hash(Hash :: md5sha<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| md5<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| sha<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| sha224<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| sha256<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| sha384<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| sha512,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Value :: binary()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>binary()</head></clause>
  </contract>
  <anno>Hash</anno>
  <anno>Value</anno>
</spec>
<spec>
  <name>supported_ecc</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>update_handshake_history</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>update_handshake_history(Handshake :: <seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Data :: term()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso></head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Handshake</anno>
</spec>
<spec>
  <name>verify_connection</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>verify_connection(Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Finished :: #finished{},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Role :: client | server,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>PrfAlgo :: integer(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>MasterSecret :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X6 :: <seealso marker="#type-tls_handshake_history">tls_handshake_history()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>verified | #alert{}</head></clause>
  </contract>
  <anno>Finished</anno>
  <anno>MasterSecret</anno>
  <anno>PrfAlgo</anno>
  <anno>Role</anno>
  <anno>Version</anno>
  <anno>X6</anno>
</spec>
<spec>
  <name>verify_server_key</name>
  <arity>5</arity>
  <contract/>
</spec>
<spec>
  <name>verify_signature</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>verify_signature(Version :: <seealso marker="#type-tls_version">tls_version()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Hash :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>HashAlgo :: {term(), term()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Signature :: binary(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X5 :: <seealso marker="#type-public_key_info">public_key_info()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>true | false</head></clause>
  </contract>
  <anno>Hash</anno>
  <anno>HashAlgo</anno>
  <anno>Signature</anno>
  <anno>Version</anno>
  <anno>X5</anno>
</spec>
<timestamp>Generated by EDoc, May 5 2014, 23:15:55.</timestamp>
</module>