<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>erts_debug</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>erts_debug.xml</file></header>
<module>erts_debug</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>df_ret() = ok | {error, {badopen, module()}} | {undef, module()}</c></tag>
<item><marker id="type-df_ret"/> </item>
</taglist></section>
<funcs>
<func>
<name>breakpoint(MFA, Flag) -&gt; non_neg_integer()</name>
<fsummary> </fsummary>
<type>
<v>MFA = {Module::module(), Function::atom(), Arity::arity() | '_'}</v><v>Flag = boolean()</v></type>
<desc><marker id="breakpoint-2"/>
 </desc></func>
<func>
<name>disassemble(What) -&gt; false | undef | Result</name>
<fsummary> </fsummary>
<type>
<v>What = MFA | Address</v><v>Result = {Address, Code, MFA}</v><v>MFA = mfa()</v><v>Address = non_neg_integer()</v><v>Code = binary()</v></type>
<desc><marker id="disassemble-1"/>
 </desc></func>
<func>
<name>display(Term) -&gt; string()</name>
<fsummary> </fsummary>
<type>
<v>Term = term()</v></type>
<desc><marker id="display-1"/>
 </desc></func>
<func>
<name>dist_ext_to_term(Tuple, Binary) -&gt; term()</name>
<fsummary> </fsummary>
<type>
<v>Tuple = tuple()</v><v>Binary = binary()</v></type>
<desc><marker id="dist_ext_to_term-2"/>
 </desc></func>
<func>
<name>dump_monitors(Id) -&gt; true</name>
<fsummary> </fsummary>
<type>
<v>Id = pid() | atom()</v></type>
<desc><marker id="dump_monitors-1"/>
 </desc></func>
<func>
<name>dump_links(Id) -&gt; true</name>
<fsummary> </fsummary>
<type>
<v>Id = pid() | port() | atom()</v></type>
<desc><marker id="dump_links-1"/>
 </desc></func>
<func>
<name>flat_size(Term) -&gt; non_neg_integer()</name>
<fsummary> </fsummary>
<type>
<v>Term = term()</v></type>
<desc><marker id="flat_size-1"/>
 </desc></func>
<func>
<name>get_internal_state(W) -&gt; term()</name>
<fsummary> </fsummary>
<type>
<v>W = reds_left | node_and_dist_references | monitoring_nodes | next_pid | 'DbTable_words' | check_io_debug | process_info_args | processes | processes_bif_info | max_atom_out_cache_index | nbalance | available_internal_state | force_heap_frags | memory | {process_status, pid()} | {link_list, pid() | port() | node()} | {monitor_list, pid() | node()} | {channel_number, non_neg_integer()} | {have_pending_exit, pid() | port() | atom()} | {binary_info, binary()} | {term_to_binary_no_funs, term()} | {dist_port, port()} | {atom_out_cache_index, atom()} | {fake_scheduler_bindings, default_bind | spread | processor_spread | thread_spread | thread_no_node_processor_spread | no_node_processor_spread | no_node_thread_spread | no_spread | unbound} | {reader_groups_map, non_neg_integer()}</v></type>
<desc><marker id="get_internal_state-1"/>
 </desc></func>
<func>
<name>instructions() -&gt; [string()]</name>
<fsummary> </fsummary>

<desc><marker id="instructions-0"/>
 </desc></func>
<func>
<name>lock_counters(X1::info) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="lock_counters-1"/>
 </desc></func>
<func>
<name>same(Term1, Term2) -&gt; boolean()</name>
<fsummary> </fsummary>
<type>
<v>Term1 = term()</v><v>Term2 = term()</v></type>
<desc><marker id="same-2"/>
 </desc></func>
<func>
<name>set_internal_state(X1::available_internal_state, X2::boolean()) -&gt; boolean()</name>
<fsummary> </fsummary>

<desc><marker id="set_internal_state-2"/>
 </desc></func>
<func>
<name>size(Term::term()) -&gt; non_neg_integer()</name>
<fsummary> </fsummary>

<desc><marker id="size-1"/>
 </desc></func>
<func>
<name>df(Mod::module()) -&gt; df_ret()</name>
<fsummary> </fsummary>

<desc><marker id="df-1"/>
 </desc></func>
<func>
<name>df(Mod::module(), Func::atom()) -&gt; df_ret()</name>
<fsummary> </fsummary>

<desc><marker id="df-2"/>
 </desc></func>
<func>
<name>df(Mod::module(), Func::atom(), Arity::arity()) -&gt; df_ret()</name>
<fsummary> </fsummary>

<desc><marker id="df-3"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>