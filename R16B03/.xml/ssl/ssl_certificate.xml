<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>ssl_certificate</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>ssl_certificate.xml</file></header>
<module>ssl_certificate</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>certdb_ref() = reference()</c></tag>
<item><marker id="type-certdb_ref"/> </item>
<tag><c>db_handle() = term()</c></tag>
<item><marker id="type-db_handle"/> </item>
<tag><c>der_cert() = binary()</c></tag>
<item><marker id="type-der_cert"/> </item>
</taglist></section>
<funcs>
<func>
<name>trusted_cert_and_path(CertChain::[der_cert()], CertDbHandle::db_handle(), CertDbRef::certdb_ref()) -&gt; {der_cert() | unknown_ca, [der_cert()]}</name>
<fsummary> </fsummary>

<desc><marker id="trusted_cert_and_path-3"/>
 </desc></func>
<func>
<name>certificate_chain(OwnCert::undefined | binary(), CertDbHandle::db_handle(), CertsDbRef::certdb_ref()) -&gt; {error, no_cert} | {ok, [der_cert()]}</name>
<fsummary> </fsummary>

<desc><marker id="certificate_chain-3"/>
 </desc></func>
<func>
<name>file_to_certificats(File::binary(), DbHandle::term()) -&gt; [der_cert()]</name>
<fsummary> </fsummary>

<desc><marker id="file_to_certificats-2"/>
 </desc></func>
<func>
<name>validate_extension(X1::term(), Reason::{extension, #'Extension'{}} | {bad_cert, atom()} | valid, Role::term()) -&gt; {valid, term()} | {fail, tuple()} | {unknown, term()}</name>
<fsummary> </fsummary>

<desc><marker id="validate_extension-3"/>
 </desc></func>
<func>
<name>is_valid_key_usage(KeyUse::list(), Use::term()) -&gt; boolean()</name>
<fsummary> </fsummary>

<desc><marker id="is_valid_key_usage-2"/>
 </desc></func>
<func>
<name>select_extension(Id::term(), Extensions::list()) -&gt; undefined | #'Extension'{}</name>
<fsummary> </fsummary>

<desc><marker id="select_extension-2"/>
 </desc></func>
<func>
<name>extensions_list(Extensions::asn1_NOVALUE | list()) -&gt; list()</name>
<fsummary> </fsummary>

<desc><marker id="extensions_list-1"/>
 </desc></func>
<func>
<name>public_key_type(X1::term()) -&gt; rsa | dsa | ec</name>
<fsummary> </fsummary>

<desc><marker id="public_key_type-1"/>
 </desc></func>
<func>
<name>is_valid_extkey_usage(KeyUse, X2) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="is_valid_extkey_usage-2"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>