<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>dtls_record</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>dtls_record.xml</file></header>
<module>dtls_record</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>tls_atom_version() = sslv3 | tlsv1 | 'tlsv1.1' | 'tlsv1.2'</c></tag>
<item><marker id="type-tls_atom_version"/> </item>
<tag><c>tls_version() = {integer(), integer()}</c></tag>
<item><marker id="type-tls_version"/> </item>
</taglist></section>
<funcs>
<func>
<name>get_dtls_records(Data::binary(), Buffer::binary()) -&gt; {[binary()], binary()} | #alert{}</name>
<fsummary> </fsummary>

<desc><marker id="get_dtls_records-2"/>
 </desc></func>
<func>
<name>encode_plain_text(Type, Version, Data, Connection_states) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="encode_plain_text-4"/>
 </desc></func>
<func>
<name>decode_cipher_text(Ssl_tls, Connection_states) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="decode_cipher_text-2"/>
 </desc></func>
<func>
<name>protocol_version(X1::tls_atom_version() | tls_version()) -&gt; tls_version() | tls_atom_version()</name>
<fsummary> </fsummary>

<desc><marker id="protocol_version-1"/>
 </desc></func>
<func>
<name>lowest_protocol_version(Version::tls_version(), X2::tls_version()) -&gt; tls_version()</name>
<fsummary> </fsummary>

<desc><marker id="lowest_protocol_version-2"/>
 </desc></func>
<func>
<name>highest_protocol_version(Vers::[tls_version()]) -&gt; tls_version()</name>
<fsummary> </fsummary>

<desc><marker id="highest_protocol_version-1"/>
 </desc></func>
<func>
<name>supported_protocol_versions() -&gt; [tls_version()]</name>
<fsummary> </fsummary>

<desc><marker id="supported_protocol_versions-0"/>
 </desc></func>
<func>
<name>is_acceptable_version(Version::tls_version(), Supported::[tls_version()]) -&gt; boolean()</name>
<fsummary> </fsummary>

<desc><marker id="is_acceptable_version-2"/>
 </desc></func>
<func>
<name>init_connection_state_seq(X1::tls_version(), Connection_states::#connection_states{}) -&gt; #connection_state{}</name>
<fsummary> </fsummary>

<desc><marker id="init_connection_state_seq-2"/>
 </desc></func>
<func>
<name>current_connection_state_epoch(Connection_states::#connection_states{}, X2::read | write) -&gt; integer()</name>
<fsummary> </fsummary>

<desc><marker id="current_connection_state_epoch-2"/>
 </desc></func>
<func>
<name>connection_state_by_epoch(Connection_states::#connection_states{}, Epoch::integer(), X3::read | write) -&gt; #connection_state{}</name>
<fsummary> </fsummary>

<desc><marker id="connection_state_by_epoch-3"/>
 </desc></func>
<func>
<name>set_connection_state_by_epoch(Connection_states::#connection_states{}, Connection_state::#connection_state{}, X3::read | write) -&gt; #connection_states{}</name>
<fsummary> </fsummary>

<desc><marker id="set_connection_state_by_epoch-3"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>