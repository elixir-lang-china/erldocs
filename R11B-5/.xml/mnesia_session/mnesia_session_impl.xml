<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>mnesia_session_impl</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>mnesia_session_impl.xml</file></header>
<module>mnesia_session_impl</module>
<modulesummary/>
<description>
</description>
<funcs>
<func>
<name>init(ConnectionType) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="init-1"/>
 </desc></func>
<func>
<name>code_change(Vsn, State, Extra) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="code_change-3"/>
 </desc></func>
<func>
<name>terminate(Reason, State) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="terminate-2"/>
 </desc></func>
<func>
<name>dirty_write(State, Tab, Obj) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_write-3"/>
 </desc></func>
<func>
<name>dirty_read(State, Tab, KeyObj) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_read-3"/>
 </desc></func>
<func>
<name>dirty_update_counter(State, Tab, KeyObj, Val) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_update_counter-4"/>
 </desc></func>
<func>
<name>dirty_delete(State, Tab, KeyObj) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_delete-3"/>
 </desc></func>
<func>
<name>dirty_delete_object(State, Tab, RecordObj) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_delete_object-3"/>
 </desc></func>
<func>
<name>dirty_slot(State, Tab, SlotNr) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_slot-3"/>
 </desc></func>
<func>
<name>dirty_first(State, TabName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_first-2"/>
 </desc></func>
<func>
<name>dirty_next(State, TabName, KeyObj) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_next-3"/>
 </desc></func>
<func>
<name>dirty_all_keys(State, TabName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_all_keys-2"/>
 </desc></func>
<func>
<name>dirty_match_object(State, Tab, Pattern) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_match_object-3"/>
 </desc></func>
<func>
<name>dirty_match_all(State, TabName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_match_all-2"/>
 </desc></func>
<func>
<name>dirty_index_read(State, Tab, KeyObj, Pos) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_index_read-4"/>
 </desc></func>
<func>
<name>dirty_index_match_object(State, Tab, Pattern, Pos) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dirty_index_match_object-4"/>
 </desc></func>
<func>
<name>backup1(State, Filename) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="backup1-2"/>
 </desc></func>
<func>
<name>backup2(State, OpaqueData, Module) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="backup2-3"/>
 </desc></func>
<func>
<name>install_fallback1(State, Filename) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="install_fallback1-2"/>
 </desc></func>
<func>
<name>install_fallback2(State, OpaqueData, Module) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="install_fallback2-3"/>
 </desc></func>
<func>
<name>uninstall_fallback(State) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="uninstall_fallback-1"/>
 </desc></func>
<func>
<name>create_table(State, TabName, Tabdef) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="create_table-3"/>
 </desc></func>
<func>
<name>delete_table(State, TabName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="delete_table-2"/>
 </desc></func>
<func>
<name>add_table_copy(State, TabName, ToNode, ReplicaStorage) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="add_table_copy-4"/>
 </desc></func>
<func>
<name>del_table_copy(State, TabName, FromNode) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="del_table_copy-3"/>
 </desc></func>
<func>
<name>move_table_copy(State, TabName, FromNode, ToNode) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="move_table_copy-4"/>
 </desc></func>
<func>
<name>add_table_index(State, TabName, ColumnNr) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="add_table_index-3"/>
 </desc></func>
<func>
<name>del_table_index(State, TabName, ColumnNr) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="del_table_index-3"/>
 </desc></func>
<func>
<name>change_table_copy_type(State, TabName, NodeName, SType) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="change_table_copy_type-4"/>
 </desc></func>
<func>
<name>change_table_access_mode(State, TabName, Mode) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="change_table_access_mode-3"/>
 </desc></func>
<func>
<name>wait_for_tables(State, TabNames, Timeout) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="wait_for_tables-3"/>
 </desc></func>
<func>
<name>force_load_table(State, TabName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="force_load_table-2"/>
 </desc></func>
<func>
<name>change_table_load_order(State, TabName, LoadOrder) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="change_table_load_order-3"/>
 </desc></func>
<func>
<name>set_master_nodes1(State, NodeNames) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="set_master_nodes1-2"/>
 </desc></func>
<func>
<name>set_master_nodes2(State, TabName, NodeNames) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="set_master_nodes2-3"/>
 </desc></func>
<func>
<name>dump_log(State) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dump_log-1"/>
 </desc></func>
<func>
<name>dump_tables(State, TableList) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dump_tables-2"/>
 </desc></func>
<func>
<name>activate_checkpoint(State, CpDef) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="activate_checkpoint-2"/>
 </desc></func>
<func>
<name>deactivate_checkpoint(State, CpName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="deactivate_checkpoint-2"/>
 </desc></func>
<func>
<name>backup_checkpoint1(State, CpName, Filename) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="backup_checkpoint1-3"/>
 </desc></func>
<func>
<name>backup_checkpoint2(State, CpName, OpaqueData, ModName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="backup_checkpoint2-4"/>
 </desc></func>
<func>
<name>load_textfile(State, Filename) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="load_textfile-2"/>
 </desc></func>
<func>
<name>dump_to_textfile(State, Filename) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="dump_to_textfile-2"/>
 </desc></func>
<func>
<name>table_info(State, TabName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="table_info-2"/>
 </desc></func>
<func>
<name>system_info(State) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="system_info-1"/>
 </desc></func>
<func>
<name>create_schema(State, Nodes) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="create_schema-2"/>
 </desc></func>
<func>
<name>delete_schema(State, Nodes) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="delete_schema-2"/>
 </desc></func>
<func>
<name>start_mnesia(State) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="start_mnesia-1"/>
 </desc></func>
<func>
<name>stop_mnesia(State) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="stop_mnesia-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>