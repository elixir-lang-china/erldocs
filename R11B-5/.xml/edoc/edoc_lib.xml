<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>edoc_lib</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>edoc_lib.xml</file></header>
<module>edoc_lib</module>
<modulesummary>Utility functions for EDoc.</modulesummary>
<description>
<p>Utility functions for EDoc.</p></description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>edoc_env()</c></tag>
<item><marker id="type-edoc_env"/>
<p>Environment information needed by EDoc for
  generating references. The data representation is not documented.
 </p>
</item>
<tag><c>info() = #info{name=string(), mail=string(), uri=string()}</c></tag>
<item><marker id="type-info"/> </item>
</taglist></section>
<funcs>
<func>
<name>timestr(X1) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="timestr-1"/>
 </desc></func>
<func>
<name>datestr(X1) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="datestr-1"/>
 </desc></func>
<func>
<name>count(X, Xs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="count-2"/>
 </desc></func>
<func>
<name>lines(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="lines-1"/>
 </desc></func>
<func>
<name>split_at(Cs, K) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="split_at-2"/>
 </desc></func>
<func>
<name>split_at_stop(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="split_at_stop-1"/>
 </desc></func>
<func>
<name>split_at_space(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="split_at_space-1"/>
 </desc></func>
<func>
<name>is_space(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="is_space-1"/>
 </desc></func>
<func>
<name>strip_space(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="strip_space-1"/>
 </desc></func>
<func>
<name>segment(Es, N) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="segment-2"/>
 </desc></func>
<func>
<name>transpose(Xss) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="transpose-1"/>
 </desc></func>
<func>
<name>get_first_sentence(Es) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="get_first_sentence-1"/>
 </desc></func>
<func>
<name>is_name(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="is_name-1"/>
 </desc></func>
<func>
<name>unique(Xs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="unique-1"/>
 </desc></func>
<func>
<name>parse_expr(S, L) -&gt; term()
</name>
<fsummary>EDoc Erlang expression parsing.</fsummary>

<desc><marker id="parse_expr-2"/>

<p>EDoc Erlang expression parsing. For parsing things like the
  content of <seealso marker="chapter#ftag-equiv">@equiv</seealso>
  tags, and strings denoting file names, e.g. in @headerfile. Also used
  by <seealso marker="edoc_run">edoc_run</seealso>.</p>
</desc></func>
<func>
<name>parse_contact(S, L) -&gt; term()
</name>
<fsummary>EDoc "contact information" parsing.</fsummary>

<desc><marker id="parse_contact-2"/>

<p>EDoc "contact information" parsing. This is the type of the
  content in e.g.
  <seealso marker="chapter#mtag-author">@author</seealso> tags.</p>
</desc></func>
<func>
<name>escape_uri(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="escape_uri-1"/>
 </desc></func>
<func>
<name>join_uri(Base, Path) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="join_uri-2"/>
 </desc></func>
<func>
<name>is_relative_uri(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="is_relative_uri-1"/>
 </desc></func>
<func>
<name>uri_get(Path) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="uri_get-1"/>
 </desc></func>
<func>
<name>to_label(Cs) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="to_label-1"/>
 </desc></func>
<func>
<name>filename(T) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="filename-1"/>
 </desc></func>
<func>
<name>copy_file(From, To) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="copy_file-2"/>
 </desc></func>
<func>
<name>simplify_path(P) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="simplify_path-1"/>
 </desc></func>
<func>
<name>try_subdir(Dir, Subdir) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="try_subdir-2"/>
 </desc></func>
<func>
<name>write_file(Text::deep_string(), Dir::filename() (see module edoc), Name::filename() (see module edoc)) -&gt; ok</name>
<fsummary>Write the given Text to the file named by Name in directory
  Dir.</fsummary>

<desc><marker id="write_file-3"/>

<p>Write the given <c>Text</c> to the file named by <c>Name</c> in directory
  <c>Dir</c>. If the target directory does not exist, it will be created.</p>
</desc></func>
<func>
<name>write_file(Text::deep_string(), Dir::filename() (see module edoc), Name::filename() (see module edoc), Package::atom() | string()) -&gt; ok</name>
<fsummary>Like write_file/3, but adds path components to the target
  directory corresponding to the specified package.</fsummary>

<desc><marker id="write_file-4"/>

<p>Like <seealso marker="#write_file-3">write_file/3</seealso>, but adds path components to the target
  directory corresponding to the specified package.</p>
</desc></func>
<func>
<name>write_info_file(App, Packages, Modules, Dir) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="write_info_file-4"/>
 </desc></func>
<func>
<name>read_info_file(Dir) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="read_info_file-1"/>
 </desc></func>
<func>
<name>find_sources(Path, Opts) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="find_sources-2"/>
 </desc></func>
<func>
<name>find_sources(Path, Pkg, Opts) -&gt; term()
</name>
<fsummary>See edoc:run/3 for a description of the options
  subpackages, source_suffix and exclude_packages.</fsummary>

<desc><marker id="find_sources-3"/>

<p>See <seealso marker="edoc#run-3">edoc:run/3</seealso> for a description of the options
  <c>subpackages</c>, <c>source_suffix</c> and <c>exclude_packages</c>.</p>
</desc></func>
<func>
<name>find_file(Ps, Pkg, Name) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="find_file-3"/>
 </desc></func>
<func>
<name>find_doc_dirs() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="find_doc_dirs-0"/>
 </desc></func>
<func>
<name>get_doc_env(Options::proplist()) -&gt; edoc_env()</name>
<fsummary>Equivalent to get_doc_env([], [], [], Opts).
</fsummary>

<desc><marker id="get_doc_env-1"/>
<p>Equivalent to <seealso marker="#get_doc_env-4">get_doc_env([], [], [], Opts)</seealso>.</p>
</desc></func>
<func>
<name>get_doc_env(App, Packages, Modules, Options::proplist()) -&gt; edoc_env()</name>
<fsummary>Creates an environment data structure used by parts of EDoc for
  generating references, etc.</fsummary>
<type>
<v>App = [] | atom()</v><v>Packages = [atom()]</v><v>Modules = [atom()]</v><v>[term()]</v></type>
<desc><marker id="get_doc_env-4"/>

<p>Creates an environment data structure used by parts of EDoc for
  generating references, etc. See <seealso marker="edoc#run-3">edoc:run/3</seealso> for a description
  of the options <c>file_suffix</c>, <c>app_default</c> and <c>doc_path</c>.
 </p>
<p><em>See also:</em> <seealso marker="edoc#get_doc-3">edoc:get_doc/3</seealso>, <seealso marker="edoc_extract#source-4">edoc_extract:source/4</seealso>.</p>
</desc></func>
<func>
<name>run_doclet(Fun, Opts) -&gt; term()
</name>
<fsummary>See edoc:run/3 for a description of the doclet option.</fsummary>

<desc><marker id="run_doclet-2"/>

<p>See <seealso marker="edoc#run-3">edoc:run/3</seealso> for a description of the <c>doclet</c> option.</p>
</desc></func>
<func>
<name>run_layout(Fun, Opts) -&gt; term()
</name>
<fsummary>See edoc:layout/2 for a description of the layout
  option.</fsummary>

<desc><marker id="run_layout-2"/>

<p>See <seealso marker="edoc#layout-2">edoc:layout/2</seealso> for a description of the <c>layout</c>
  option.</p>
</desc></func></funcs>
<section><title>See also</title><p><seealso marker="edoc">edoc</seealso></p></section>
<authors>

<aname>Richard Carlsson</aname>
<email>richardc@csd.uu.se</email></authors></erlref>