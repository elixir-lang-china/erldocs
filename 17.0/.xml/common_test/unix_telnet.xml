<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>unix_telnet</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>unix_telnet.xml</file></header>
<module>unix_telnet</module>
<modulesummary>Callback module for ct_telnet, for connecting to a telnet   
server on a unix host.</modulesummary>
<description>
<p>Callback module for ct_telnet, for connecting to a telnet   
server on a unix host.</p>
  
   <p>It requires the following entry in the config file:</p>
   <pre>
   {unix,[{telnet,HostNameOrIpAddress},
          {port,PortNum},                 % optional
          {username,UserName},
          {password,Password},
          {keep_alive,Bool}]}.            % optional</pre>
  
   <p>To communicate via telnet to the host specified by
   <c>HostNameOrIpAddress</c>, use the interface functions in
   <c>ct_telnet</c>, e.g. <c>open(Name), cmd(Name,Cmd), ...</c>.</p>
  
   <p><c>Name</c> is the name you allocated to the unix host in
   your <c>require</c> statement. E.g.</p>
   <pre>   suite() -&gt; [{require,Name,{unix,[telnet]}}].</pre>
   <p>or</p>
   <pre>   ct:require(Name,{unix,[telnet]}).</pre>
  
   <p>The "keep alive" activity (i.e. that Common Test sends NOP to the server
   every 10 seconds if the connection is idle) may be enabled or disabled for one
   particular connection as described here. It may be disabled for all connections
   using <c>telnet_settings</c> (see <c>ct_telnet</c>).</p>
  
   <p>Note that the <c>{port,PortNum}</c> tuple is optional and if
   omitted, default telnet port 23 will be used. Also the <c>keep_alive</c> tuple
   is optional, and the value defauls to true (enabled).</p>
  </description>
<funcs>
<func>
<name>get_prompt_regexp() -&gt; PromptRegexp</name>
<fsummary>Callback for ct_telnet.erl.</fsummary>
<type>
<v>PromptRegexp = prompt_regexp() (see module ct_telnet)</v></type>
<desc><marker id="get_prompt_regexp-0"/>

<p>Callback for ct_telnet.erl.</p>
  
   <p>Return a suitable regexp string that will match common
   prompts for users on unix hosts.</p>
</desc></func>
<func>
<name>connect(ConnName, Ip, Port, Timeout, KeepAlive, Extra) -&gt; {ok, Handle} | {error, Reason}</name>
<fsummary>Callback for ct_telnet.erl.</fsummary>
<type>
<v>ConnName = target_name() (see module ct)</v><v>Ip = string() | {integer(), integer(), integer(), integer()}</v><v>Port = integer()</v><v>Timeout = integer()</v><v>KeepAlive = bool()</v><v>Extra = target_name() (see module ct) | {Username, Password}</v><v>Username = string()</v><v>Password = string()</v><v>Handle = handle() (see module ct_telnet)</v><v>Reason = term()</v></type>
<desc><marker id="connect-6"/>

<p>Callback for ct_telnet.erl.</p>
  
   <p>Setup telnet connection to a unix host.</p>
</desc></func></funcs>
<section><title>See also</title><p><seealso marker="ct">ct</seealso>, <seealso marker="ct_telnet">ct_telnet</seealso></p></section>
<authors>
<aname> </aname>
<email> </email></authors></erlref>