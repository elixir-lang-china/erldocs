<module name="ssl_pkix_db">
<type>
  <name>certdb_ref</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-certdb_ref">certdb_ref()</marker> = reference()</typehead></typedecl>
</type>
<type>
  <name>db_handle</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-db_handle">db_handle()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>der_cert</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-der_cert">der_cert()</marker> = binary()</typehead></typedecl>
</type>
<type>
  <name>issuer</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-issuer">issuer()</marker> = tuple()</typehead></typedecl>
</type>
<type>
  <name>serialnumber</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-serialnumber">serialnumber()</marker> = integer()</typehead></typedecl>
</type>
<spec>
  <name>add_trusted_certs</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>add_trusted_certs(Pid :: pid(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>File :: {<seealso marker="erlang#type-timestamp">erlang:timestamp()</seealso>, string()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {der, list()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Db :: [<seealso marker="#type-db_handle">db_handle()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, [<seealso marker="#type-db_handle">db_handle()</seealso>]}</head></clause>
  </contract>
  <anno>Db</anno>
  <anno>File</anno>
  <anno>Pid</anno>
</spec>
<spec>
  <name>cache_pem_file</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>cache_pem_file(X1 :: {binary(), binary()}, X2 :: [<seealso marker="#type-db_handle">db_handle()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, term()}</head></clause>
  </contract>
  <anno>X1</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>cache_pem_file</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>cache_pem_file(Ref :: reference(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: {binary(), binary()},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X3 :: [<seealso marker="#type-db_handle">db_handle()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, term()}</head></clause>
  </contract>
  <anno>Ref</anno>
  <anno>X2</anno>
  <anno>X3</anno>
</spec>
<spec>
  <name>clear</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>clear(Db :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Db</anno>
</spec>
<spec>
  <name>create</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>create() -&gt; [<seealso marker="#type-db_handle">db_handle()</seealso>, ...]</head></clause>
  </contract>
</spec>
<spec>
  <name>db_size</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>db_size(Db :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt; integer()</head></clause>
  </contract>
  <anno>Db</anno>
</spec>
<spec>
  <name>foldl</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>foldl(Fun :: fun((term(), term()) -&gt; term()),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Acc0 :: term(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Cache :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>term()</head></clause>
  </contract>
  <anno>Acc0</anno>
  <anno>Cache</anno>
  <anno>Fun</anno>
</spec>
<spec>
  <name>insert</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>insert(Key :: term(), Data :: term(), Db :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Data</anno>
  <anno>Db</anno>
  <anno>Key</anno>
</spec>
<spec>
  <name>lookup</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup(Key :: term(), Db :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt; [term()] | undefined</head></clause>
  </contract>
  <anno>Db</anno>
  <anno>Key</anno>
</spec>
<spec>
  <name>lookup_cached_pem</name>
  <arity>2</arity>
  <contract/>
</spec>
<spec>
  <name>lookup_trusted_cert</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>lookup_trusted_cert(DbHandle :: <seealso marker="#type-db_handle">db_handle()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Ref :: <seealso marker="#type-certdb_ref">certdb_ref()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>SerialNumber :: <seealso marker="#type-serialnumber">serialnumber()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Issuer :: <seealso marker="#type-issuer">issuer()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>undefined |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok, {<seealso marker="#type-der_cert">der_cert()</seealso>, #'OTPCertificate'{}}}</head></clause>
  </contract>
  <anno>DbHandle</anno>
  <anno>Issuer</anno>
  <anno>Ref</anno>
  <anno>SerialNumber</anno>
</spec>
<spec>
  <name>ref_count</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>ref_count(Key :: term(), Db :: <seealso marker="#type-db_handle">db_handle()</seealso>, N :: integer()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>integer()</head></clause>
  </contract>
  <anno>Db</anno>
  <anno>Key</anno>
  <anno>N</anno>
</spec>
<spec>
  <name>remove</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>remove(Dbs :: [<seealso marker="#type-db_handle">db_handle()</seealso>]) -&gt; ok</head></clause>
  </contract>
  <anno>Dbs</anno>
</spec>
<spec>
  <name>remove</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>remove(Key :: term(), Db :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt; ok</head></clause>
  </contract>
  <anno>Db</anno>
  <anno>Key</anno>
</spec>
<spec>
  <name>remove_trusted_certs</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>remove_trusted_certs(Ref :: reference(), CertsDb :: <seealso marker="#type-db_handle">db_handle()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok</head></clause>
  </contract>
  <anno>CertsDb</anno>
  <anno>Ref</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:26:17.</timestamp>
</module>