<module name="dialyzer_worker">
<type>
  <name>coordinator</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-coordinator">coordinator()</marker> = <seealso marker="dialyzer_coordinator#type-coordinator">dialyzer_coordinator:coordinator()</seealso></typehead></typedecl>
</type>
<type>
  <name>extra</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-extra">extra()</marker> = <seealso marker="#type-label">label()</seealso> | unused</typehead></typedecl>
</type>
<type>
  <name>init_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-init_data">init_data()</marker> = <seealso marker="dialyzer_coordinator#type-init_data">dialyzer_coordinator:init_data()</seealso></typehead></typedecl>
</type>
<type>
  <name>label</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-label">label()</marker> = integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>mfa_or_funlbl</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-mfa_or_funlbl">mfa_or_funlbl()</marker> = <seealso marker="#type-label">label()</seealso> | mfa()</typehead></typedecl>
</type>
<type>
  <name>mode</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-mode">mode()</marker> = <seealso marker="dialyzer_coordinator#type-mode">dialyzer_coordinator:mode()</seealso></typehead></typedecl>
</type>
<type>
  <name>result</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-result">result()</marker> = <seealso marker="dialyzer_coordinator#type-result">dialyzer_coordinator:result()</seealso></typehead></typedecl>
</type>
<type>
  <name>worker</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-worker">worker()</marker> = pid()</typehead></typedecl>
</type>
<spec>
  <name>launch</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>launch(Mode :: <seealso marker="#type-mode">mode()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Job :: [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>InitData :: <seealso marker="#type-init_data">init_data()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Coordinator :: <seealso marker="#type-coordinator">coordinator()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-worker">worker()</seealso></head></clause>
  </contract>
  <anno>Coordinator</anno>
  <anno>InitData</anno>
  <anno>Job</anno>
  <anno>Mode</anno>
</spec>
<spec>
  <name>sequential</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>sequential(X1 :: <seealso marker="#type-mode">mode()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Job :: [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>InitData :: <seealso marker="#type-init_data">init_data()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Extra :: <seealso marker="#type-extra">extra()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-result">result()</seealso></head></clause>
  </contract>
  <anno>Extra</anno>
  <anno>InitData</anno>
  <anno>Job</anno>
  <anno>X1</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:27:11.</timestamp>
</module>