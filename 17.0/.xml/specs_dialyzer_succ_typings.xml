<module name="dialyzer_succ_typings">
<type>
  <name>dataflow_init_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dataflow_init_data">dataflow_init_data()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>dial_warn_tag</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dial_warn_tag">dial_warn_tag()</marker> = warn_return_no_exit<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_return_only_exit<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_not_called<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_non_proper_list<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_matching<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_opaque<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_fun_app<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_failing_call<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_bin_construction<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_types<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_syntax<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_not_equal<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_subtype<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_supertype<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_callgraph<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_umatched_return<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_race_condition<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_behaviour<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_range<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_undefined_callbacks<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_unknown</typehead></typedecl>
</type>
<type>
  <name>dial_warning</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dial_warning">dial_warning()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-dial_warn_tag">dial_warn_tag()</seealso>, <seealso marker="#type-file_line">file_line()</seealso>, {atom(), [term()]}}</typehead></typedecl>
</type>
<type>
  <name>doc_plt</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-doc_plt">doc_plt()</marker> = undefined | <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso></typehead></typedecl>
</type>
<type>
  <name>file_line</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_line">file_line()</marker> = {<seealso marker="file#type-filename">file:filename()</seealso>, integer() &gt;= 0}</typehead></typedecl>
</type>
<type>
  <name>fixpoint_init_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-fixpoint_init_data">fixpoint_init_data()</marker> = <seealso marker="#type-typesig_init_data">typesig_init_data()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-dataflow_init_data">dataflow_init_data()</seealso></typehead></typedecl>
</type>
<type>
  <name>label</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-label">label()</marker> = integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>mfa_or_funlbl</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-mfa_or_funlbl">mfa_or_funlbl()</marker> = <seealso marker="#type-label">label()</seealso> | mfa()</typehead></typedecl>
</type>
<type>
  <name>parent</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-parent">parent()</marker> = none | pid()</typehead></typedecl>
</type>
<type>
  <name>scc</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-scc">scc()</marker> = [<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>] | [module()]</typehead></typedecl>
</type>
<type>
  <name>solver</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-solver">solver()</marker> = v1 | v2</typehead></typedecl>
</type>
<type>
  <name>typesig_init_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-typesig_init_data">typesig_init_data()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>warnings_init_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-warnings_init_data">warnings_init_data()</marker> = term()</typehead></typedecl>
</type>
<spec>
  <name>analyze_callgraph</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>analyze_callgraph(Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Plt :: <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Codeserver :: <seealso marker="dialyzer_codeserver#type-codeserver">dialyzer_codeserver:codeserver()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Codeserver</anno>
  <anno>Plt</anno>
</spec>
<spec>
  <name>analyze_callgraph</name>
  <arity>6</arity>
  <contract>
    <clause>
      <head>analyze_callgraph(Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Plt :: <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Codeserver :: <seealso marker="dialyzer_codeserver#type-codeserver">dialyzer_codeserver:codeserver()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>TimingServer :: <seealso marker="dialyzer_timing#type-timing_server">dialyzer_timing:timing_server()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Solvers :: [<seealso marker="#type-solver">solver()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Parent :: <seealso marker="#type-parent">parent()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Codeserver</anno>
  <anno>Parent</anno>
  <anno>Plt</anno>
  <anno>Solvers</anno>
  <anno>TimingServer</anno>
</spec>
<spec>
  <name>collect_warnings</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>collect_warnings(M :: module(), X2 :: <seealso marker="#type-warnings_init_data">warnings_init_data()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-dial_warning">dial_warning()</seealso>]</head></clause>
  </contract>
  <anno>M</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>find_depends_on</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>find_depends_on(SCC :: <seealso marker="#type-scc">scc()</seealso> | module(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: <seealso marker="#type-fixpoint_init_data">fixpoint_init_data()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-scc">scc()</seealso>]</head></clause>
  </contract>
  <anno>SCC</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>find_required_by</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>find_required_by(SCC :: <seealso marker="#type-scc">scc()</seealso> | module(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>X2 :: <seealso marker="#type-fixpoint_init_data">fixpoint_init_data()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-scc">scc()</seealso>]</head></clause>
  </contract>
  <anno>SCC</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>find_succ_types_for_scc</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>find_succ_types_for_scc(SCC :: <seealso marker="#type-scc">scc()</seealso>, X2 :: <seealso marker="#type-typesig_init_data">typesig_init_data()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>]</head></clause>
  </contract>
  <anno>SCC</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>get_warnings</name>
  <arity>8</arity>
  <contract>
    <clause>
      <head>get_warnings(Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Plt :: <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>DocPlt :: <seealso marker="#type-doc_plt">doc_plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Codeserver :: <seealso marker="dialyzer_codeserver#type-codeserver">dialyzer_codeserver:codeserver()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>NoWarnUnused :: <seealso marker="sets#type-set">sets:set</seealso>(mfa()),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>TimingServer :: <seealso marker="dialyzer_timing#type-timing_server">dialyzer_timing:timing_server()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Solvers :: [<seealso marker="#type-solver">solver()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Parent :: pid()) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{[<seealso marker="#type-dial_warning">dial_warning()</seealso>], <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>, <seealso marker="#type-doc_plt">doc_plt()</seealso>}</head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Codeserver</anno>
  <anno>DocPlt</anno>
  <anno>NoWarnUnused</anno>
  <anno>Parent</anno>
  <anno>Plt</anno>
  <anno>Solvers</anno>
  <anno>TimingServer</anno>
</spec>
<spec>
  <name>lookup_names</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>lookup_names(Labels :: [<seealso marker="#type-label">label()</seealso>], X2 :: <seealso marker="#type-fixpoint_init_data">fixpoint_init_data()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-mfa_or_funlbl">mfa_or_funlbl()</seealso>]</head></clause>
  </contract>
  <anno>Labels</anno>
  <anno>X2</anno>
</spec>
<spec>
  <name>refine_one_module</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>refine_one_module(M :: module(), X2 :: <seealso marker="#type-dataflow_init_data">dataflow_init_data()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-label">label()</seealso>]</head></clause>
  </contract>
  <anno>M</anno>
  <anno>X2</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:27:11.</timestamp>
</module>