<module name="erl_scan">
<type>
  <name>attribute_info</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-attribute_info">attribute_info()</marker> = {column, <seealso marker="#type-column">column()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {length, integer() &gt;= 1}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {line, <seealso marker="#type-info_line">info_line()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {location, <seealso marker="#type-info_location">info_location()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {text, string()}</typehead></typedecl>
</type>
<type>
  <name>attribute_item</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-attribute_item">attribute_item()</marker> = column | length | line | location | text</typehead></typedecl>
</type>
<type>
  <name>attributes</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-attributes">attributes()</marker> = <seealso marker="#type-line">line()</seealso> | <seealso marker="#type-attributes_data">attributes_data()</seealso></typehead></typedecl>
</type>
<type>
  <name>attributes_data</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-attributes_data">attributes_data()</marker> = [{column, <seealso marker="#type-column">column()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{line, <seealso marker="#type-info_line">info_line()</seealso>} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{text, string()}]<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {<seealso marker="#type-line">line()</seealso>, <seealso marker="#type-column">column()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>category</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-category">category()</marker> = atom()</typehead></typedecl>
</type>
<type>
  <name>char_spec</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-char_spec">char_spec()</marker> = string() | eof</typehead></typedecl>
</type>
<type>
  <name>column</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-column">column()</marker> = integer() &gt;= 1</typehead></typedecl>
</type>
<type>
  <name>error_description</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-error_description">error_description()</marker> = term()</typehead></typedecl>
</type>
<type>
  <name>error_info</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-error_info">error_info()</marker> = {<seealso marker="#type-location">location()</seealso>, module(), <seealso marker="#type-error_description">error_description()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>info_line</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-info_line">info_line()</marker> = integer() | term()</typehead></typedecl>
</type>
<type>
  <name>info_location</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-info_location">info_location()</marker> = <seealso marker="#type-location">location()</seealso> | term()</typehead></typedecl>
</type>
<type>
  <name>line</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-line">line()</marker> = integer()</typehead></typedecl>
</type>
<type>
  <name>location</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-location">location()</marker> = <seealso marker="#type-line">line()</seealso> | {<seealso marker="#type-line">line()</seealso>, <seealso marker="#type-column">column()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>option</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-option">option()</marker> = return<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| return_white_spaces<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| return_comments<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| text<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {reserved_word_fun, <seealso marker="#type-resword_fun">resword_fun()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>options</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-options">options()</marker> = <seealso marker="#type-option">option()</seealso> | [<seealso marker="#type-option">option()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>resword_fun</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-resword_fun">resword_fun()</marker> = fun((atom()) -&gt; boolean())</typehead></typedecl>
</type>
<type>
  <name>return_cont</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-return_cont">return_cont()</marker></typehead></typedecl>
</type>
<type>
  <name>symbol</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-symbol">symbol()</marker> = atom() | float() | integer() | string()</typehead></typedecl>
</type>
<type>
  <name>token</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-token">token()</marker> = {<seealso marker="#type-category">category()</seealso>, <seealso marker="#type-attributes">attributes()</seealso>, <seealso marker="#type-symbol">symbol()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {<seealso marker="#type-category">category()</seealso>, <seealso marker="#type-attributes">attributes()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>token_info</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-token_info">token_info()</marker> = {category, <seealso marker="#type-category">category()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {symbol, <seealso marker="#type-symbol">symbol()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-attribute_info">attribute_info()</seealso></typehead></typedecl>
</type>
<type>
  <name>token_item</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-token_item">token_item()</marker> = category | symbol | <seealso marker="#type-attribute_item">attribute_item()</seealso></typehead></typedecl>
</type>
<type>
  <name>tokens</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-tokens">tokens()</marker> = [<seealso marker="#type-token">token()</seealso>]</typehead></typedecl>
</type>
<type>
  <name>tokens_result</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-tokens_result">tokens_result()</marker> = {ok,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Tokens :: <seealso marker="#type-tokens">tokens()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>EndLocation :: <seealso marker="#type-location">location()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {eof, EndLocation :: <seealso marker="#type-location">location()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {error,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ErrorInfo :: <seealso marker="#type-error_info">error_info()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>EndLocation :: <seealso marker="#type-location">location()</seealso>}</typehead></typedecl>
  <anno>EndLocation</anno>
  <anno>ErrorInfo</anno>
  <anno>Tokens</anno>
</type>
<spec>
  <name>attributes_info</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>attributes_info(Attributes) -&gt; AttributesInfo</head>
      <guard>
        <subtype><typename>Attributes</typename><string>Attributes = <seealso marker="#type-attributes">attributes()</seealso></string></subtype>
        <subtype><typename>AttributesInfo</typename><string>AttributesInfo = [AttributeInfoTuple :: <seealso marker="#type-attribute_info">attribute_info()</seealso>]</string></subtype>
      </guard></clause>
  </contract>
  <anno>AttributeInfoTuple</anno>
  <anno>Attributes</anno>
  <anno>AttributesInfo</anno>
</spec>
<spec>
  <name>attributes_info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>attributes_info(Attributes, AttributeItem) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>AttributeInfoTuple | undefined</head>
      <guard>
        <subtype><typename>Attributes</typename><string>Attributes = <seealso marker="#type-attributes">attributes()</seealso></string></subtype>
        <subtype><typename>AttributeItem</typename><string>AttributeItem = <seealso marker="#type-attribute_item">attribute_item()</seealso></string></subtype>
        <subtype><typename>AttributeInfoTuple</typename><string>AttributeInfoTuple = <seealso marker="#type-attribute_info">attribute_info()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>AttributeInfoTuple</anno>
  <anno>AttributeItem</anno>
  <anno>Attributes</anno>
</spec>
<spec>
  <name>attributes_info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>attributes_info(Attributes, AttributeItems) -&gt; AttributeInfo</head>
      <guard>
        <subtype><typename>Attributes</typename><string>Attributes = <seealso marker="#type-attributes">attributes()</seealso></string></subtype>
        <subtype><typename>AttributeItems</typename><string>AttributeItems = [AttributeItem :: <seealso marker="#type-attribute_item">attribute_item()</seealso>]</string></subtype>
        <subtype><typename>AttributeInfo</typename><string>AttributeInfo = [AttributeInfoTuple :: <seealso marker="#type-attribute_info">attribute_info()</seealso>]</string></subtype>
      </guard></clause>
  </contract>
  <anno>AttributeInfo</anno>
  <anno>AttributeInfoTuple</anno>
  <anno>AttributeItem</anno>
  <anno>AttributeItems</anno>
  <anno>Attributes</anno>
</spec>
<spec>
  <name>continuation_location</name>
  <arity>1</arity>
  <contract/>
</spec>
<spec>
  <name>format_error</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>format_error(ErrorDescriptor) -&gt; string()</head>
      <guard>
        <subtype><typename>ErrorDescriptor</typename><string>ErrorDescriptor = <seealso marker="#type-error_description">error_description()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>ErrorDescriptor</anno>
</spec>
<spec>
  <name>reserved_word</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>reserved_word(Atom :: atom()) -&gt; boolean()</head></clause>
  </contract>
  <anno>Atom</anno>
</spec>
<spec>
  <name>set_attribute</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>set_attribute(AttributeItem, Attributes, SetAttributeFun) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Attributes</head>
      <guard>
        <subtype><typename>AttributeItem</typename><string>AttributeItem = line</string></subtype>
        <subtype><typename>Attributes</typename><string>Attributes = <seealso marker="#type-attributes">attributes()</seealso></string></subtype>
        <subtype><typename>SetAttributeFun</typename><string>SetAttributeFun = fun((<seealso marker="#type-info_line">info_line()</seealso>) -&gt; <seealso marker="#type-info_line">info_line()</seealso>)</string></subtype>
      </guard></clause>
  </contract>
  <anno>AttributeItem</anno>
  <anno>Attributes</anno>
  <anno>SetAttributeFun</anno>
</spec>
<spec>
  <name>string</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>string(String) -&gt; Return</head>
      <guard>
        <subtype><typename>String</typename><string>String = string()</string></subtype>
        <subtype><typename>Return</typename><string>Return = {ok, Tokens :: <seealso marker="#type-tokens">tokens()</seealso>, EndLocation}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {error, ErrorInfo :: <seealso marker="#type-error_info">error_info()</seealso>, ErrorLocation}</string></subtype>
        <subtype><typename>EndLocation</typename><string>EndLocation = ErrorLocation = <seealso marker="#type-location">location()</seealso></string></subtype>
        <subtype><typename>ErrorLocation</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>EndLocation</anno>
  <anno>ErrorInfo</anno>
  <anno>ErrorLocation</anno>
  <anno>Return</anno>
  <anno>String</anno>
  <anno>Tokens</anno>
</spec>
<spec>
  <name>string</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>string(String, StartLocation) -&gt; Return</head>
      <guard>
        <subtype><typename>String</typename><string>String = string()</string></subtype>
        <subtype><typename>Return</typename><string>Return = {ok, Tokens :: <seealso marker="#type-tokens">tokens()</seealso>, EndLocation}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {error, ErrorInfo :: <seealso marker="#type-error_info">error_info()</seealso>, ErrorLocation}</string></subtype>
        <subtype><typename>StartLocation</typename><string>StartLocation = EndLocation = ErrorLocation = <seealso marker="#type-location">location()</seealso></string></subtype>
        <subtype><typename>EndLocation</typename><string></string></subtype>
        <subtype><typename>ErrorLocation</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>EndLocation</anno>
  <anno>ErrorInfo</anno>
  <anno>ErrorLocation</anno>
  <anno>Return</anno>
  <anno>StartLocation</anno>
  <anno>String</anno>
  <anno>Tokens</anno>
</spec>
<spec>
  <name>string</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>string(String, StartLocation, Options) -&gt; Return</head>
      <guard>
        <subtype><typename>String</typename><string>String = string()</string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Return</typename><string>Return = {ok, Tokens :: <seealso marker="#type-tokens">tokens()</seealso>, EndLocation}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {error, ErrorInfo :: <seealso marker="#type-error_info">error_info()</seealso>, ErrorLocation}</string></subtype>
        <subtype><typename>StartLocation</typename><string>StartLocation = EndLocation = ErrorLocation = <seealso marker="#type-location">location()</seealso></string></subtype>
        <subtype><typename>EndLocation</typename><string></string></subtype>
        <subtype><typename>ErrorLocation</typename><string></string></subtype>
      </guard></clause>
  </contract>
  <anno>EndLocation</anno>
  <anno>ErrorInfo</anno>
  <anno>ErrorLocation</anno>
  <anno>Options</anno>
  <anno>Return</anno>
  <anno>StartLocation</anno>
  <anno>String</anno>
  <anno>Tokens</anno>
</spec>
<spec>
  <name>token_info</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>token_info(Token) -&gt; TokenInfo</head>
      <guard>
        <subtype><typename>Token</typename><string>Token = <seealso marker="#type-token">token()</seealso></string></subtype>
        <subtype><typename>TokenInfo</typename><string>TokenInfo = [TokenInfoTuple :: <seealso marker="#type-token_info">token_info()</seealso>]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Token</anno>
  <anno>TokenInfo</anno>
  <anno>TokenInfoTuple</anno>
</spec>
<spec>
  <name>token_info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>token_info(Token, TokenItem) -&gt; TokenInfoTuple | undefined</head>
      <guard>
        <subtype><typename>Token</typename><string>Token = <seealso marker="#type-token">token()</seealso></string></subtype>
        <subtype><typename>TokenItem</typename><string>TokenItem = <seealso marker="#type-token_item">token_item()</seealso></string></subtype>
        <subtype><typename>TokenInfoTuple</typename><string>TokenInfoTuple = <seealso marker="#type-token_info">token_info()</seealso></string></subtype>
      </guard></clause>
  </contract>
  <anno>Token</anno>
  <anno>TokenInfoTuple</anno>
  <anno>TokenItem</anno>
</spec>
<spec>
  <name>token_info</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>token_info(Token, TokenItems) -&gt; TokenInfo</head>
      <guard>
        <subtype><typename>Token</typename><string>Token = <seealso marker="#type-token">token()</seealso></string></subtype>
        <subtype><typename>TokenItems</typename><string>TokenItems = [TokenItem :: <seealso marker="#type-token_item">token_item()</seealso>]</string></subtype>
        <subtype><typename>TokenInfo</typename><string>TokenInfo = [TokenInfoTuple :: <seealso marker="#type-token_info">token_info()</seealso>]</string></subtype>
      </guard></clause>
  </contract>
  <anno>Token</anno>
  <anno>TokenInfo</anno>
  <anno>TokenInfoTuple</anno>
  <anno>TokenItem</anno>
  <anno>TokenItems</anno>
</spec>
<spec>
  <name>tokens</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>tokens(Continuation, CharSpec, StartLocation) -&gt; Return</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = <seealso marker="#type-return_cont">return_cont()</seealso> | []</string></subtype>
        <subtype><typename>CharSpec</typename><string>CharSpec = <seealso marker="#type-char_spec">char_spec()</seealso></string></subtype>
        <subtype><typename>StartLocation</typename><string>StartLocation = <seealso marker="#type-location">location()</seealso></string></subtype>
        <subtype><typename>Return</typename><string>Return = {done,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Result :: <seealso marker="#type-tokens_result">tokens_result()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LeftOverChars :: <seealso marker="#type-char_spec">char_spec()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {more, Continuation1 :: <seealso marker="#type-return_cont">return_cont()</seealso>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>CharSpec</anno>
  <anno>Continuation</anno>
  <anno>Continuation1</anno>
  <anno>LeftOverChars</anno>
  <anno>Result</anno>
  <anno>Return</anno>
  <anno>StartLocation</anno>
</spec>
<spec>
  <name>tokens</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>tokens(Continuation, CharSpec, StartLocation, Options) -&gt; Return</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = <seealso marker="#type-return_cont">return_cont()</seealso> | []</string></subtype>
        <subtype><typename>CharSpec</typename><string>CharSpec = <seealso marker="#type-char_spec">char_spec()</seealso></string></subtype>
        <subtype><typename>StartLocation</typename><string>StartLocation = <seealso marker="#type-location">location()</seealso></string></subtype>
        <subtype><typename>Options</typename><string>Options = <seealso marker="#type-options">options()</seealso></string></subtype>
        <subtype><typename>Return</typename><string>Return = {done,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Result :: <seealso marker="#type-tokens_result">tokens_result()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LeftOverChars :: <seealso marker="#type-char_spec">char_spec()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {more, Continuation1 :: <seealso marker="#type-return_cont">return_cont()</seealso>}</string></subtype>
      </guard></clause>
  </contract>
  <anno>CharSpec</anno>
  <anno>Continuation</anno>
  <anno>Continuation1</anno>
  <anno>LeftOverChars</anno>
  <anno>Options</anno>
  <anno>Result</anno>
  <anno>Return</anno>
  <anno>StartLocation</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:26:10.</timestamp>
</module>