<module name="erl_bits">
<type>
  <name>bt_endian</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-bt_endian">bt_endian()</marker> = big | little | native</typehead></typedecl>
</type>
<type>
  <name>bt_sign</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-bt_sign">bt_sign()</marker> = signed | unsigned</typehead></typedecl>
</type>
<type>
  <name>bt_type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-bt_type">bt_type()</marker> = integer | float | binary | utf8 | utf16 | utf32</typehead></typedecl>
</type>
<type>
  <name>bt_unit</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-bt_unit">bt_unit()</marker> = 1..256</typehead></typedecl>
</type>
<type>
  <name>size</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-size">size()</marker> = all | unknown | integer() &gt;= 0 | tuple()</typehead></typedecl>
</type>
<type>
  <name>type</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-type">type()</marker> = bytes<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bitstring<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| bits<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-bt_type">bt_type()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-bt_endian">bt_endian()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| <seealso marker="#type-bt_sign">bt_sign()</seealso><br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {unit, undefined | <seealso marker="#type-bt_unit">bt_unit()</seealso>}</typehead></typedecl>
</type>
<spec>
  <name>as_list</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>as_list(Bittype ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#bittype{type = undefined | <seealso marker="#type-bt_type">bt_type()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>unit = undefined | <seealso marker="#type-bt_unit">bt_unit()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>sign = undefined | <seealso marker="#type-bt_sign">bt_sign()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>endian = undefined | <seealso marker="#type-bt_endian">bt_endian()</seealso>}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-bt_endian">bt_endian()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-bt_sign">bt_sign()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-bt_type">bt_type()</seealso> |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{unit, undefined | <seealso marker="#type-bt_unit">bt_unit()</seealso>}]</head></clause>
  </contract>
  <anno>Bittype</anno>
</spec>
<spec>
  <name>set_bit_type</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>set_bit_type(Size :: default | <seealso marker="#type-size">size()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>TypeList :: default | [<seealso marker="#type-type">type()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{ok,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>undefined | <seealso marker="#type-size">size()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#bittype{type = undefined | <seealso marker="#type-bt_type">bt_type()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>unit = undefined | <seealso marker="#type-bt_unit">bt_unit()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>sign = undefined | <seealso marker="#type-bt_sign">bt_sign()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>endian = undefined | <seealso marker="#type-bt_endian">bt_endian()</seealso>}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error, {undefined_bittype, term()}} |<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{error,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>{bittype_mismatch, term(), term(), string()}}</head></clause>
  </contract>
  <anno>Size</anno>
  <anno>TypeList</anno>
</spec>
<spec>
  <name>system_bitdefault</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>system_bitdefault() -&gt; no_system_bitdefault</head></clause>
  </contract>
</spec>
<spec>
  <name>system_bittypes</name>
  <arity>0</arity>
  <contract>
    <clause>
      <head>system_bittypes() -&gt; no_system_types</head></clause>
  </contract>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:26:10.</timestamp>
</module>