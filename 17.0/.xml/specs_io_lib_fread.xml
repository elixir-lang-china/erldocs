<module name="io_lib_fread">
<spec>
  <name>fread</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>fread(Format, String) -&gt; Result</head>
      <guard>
        <subtype><typename>Format</typename><string>Format = String = string()</string></subtype>
        <subtype><typename>String</typename><string/></subtype>
        <subtype><typename>Result</typename><string>Result = {ok,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>InputList :: [<seealso marker="io_lib#type-fread_item">io_lib:fread_item()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>LeftOverChars :: string()}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {more,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>RestFormat :: string(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Nchars :: integer() &gt;= 0,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>InputStack :: <seealso marker="io_lib#type-chars">io_lib:chars()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {error, {fread, What :: <seealso marker="io_lib#type-fread_error">io_lib:fread_error()</seealso>}}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Format</anno>
  <anno>InputList</anno>
  <anno>InputStack</anno>
  <anno>LeftOverChars</anno>
  <anno>Nchars</anno>
  <anno>RestFormat</anno>
  <anno>Result</anno>
  <anno>String</anno>
  <anno>What</anno>
</spec>
<spec>
  <name>fread</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>fread(Continuation, String, Format) -&gt; Return</head>
      <guard>
        <subtype><typename>Continuation</typename><string>Continuation = <seealso marker="io_lib#type-continuation">io_lib:continuation()</seealso> | []</string></subtype>
        <subtype><typename>String</typename><string>String = Format = string()</string></subtype>
        <subtype><typename>Format</typename><string/></subtype>
        <subtype><typename>Return</typename><string>Return = {more, Continuation1 :: <seealso marker="io_lib#type-continuation">io_lib:continuation()</seealso>}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {done, Result, LeftOverChars :: string()}</string></subtype>
        <subtype><typename>Result</typename><string>Result = {ok, InputList :: [<seealso marker="io_lib#type-fread_item">io_lib:fread_item()</seealso>]}<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| eof<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| {error, {fread, What :: <seealso marker="io_lib#type-fread_error">io_lib:fread_error()</seealso>}}</string></subtype>
      </guard></clause>
  </contract>
  <anno>Continuation</anno>
  <anno>Continuation1</anno>
  <anno>Format</anno>
  <anno>InputList</anno>
  <anno>LeftOverChars</anno>
  <anno>Result</anno>
  <anno>Return</anno>
  <anno>String</anno>
  <anno>What</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:26:11.</timestamp>
</module>