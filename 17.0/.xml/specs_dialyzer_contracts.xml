<module name="dialyzer_contracts">
<type>
  <name>contr_constr</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-contr_constr">contr_constr()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{subtype, <seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>, <seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>}</typehead></typedecl>
</type>
<type>
  <name>contract_pair</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-contract_pair">contract_pair()</marker> = {<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>, [<seealso marker="#type-contr_constr">contr_constr()</seealso>]}</typehead></typedecl>
</type>
<type>
  <name>contracts</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-contracts">contracts()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dict#type-dict">dict:dict</seealso>(mfa(), <seealso marker="dialyzer_contracts#type-file_contract">dialyzer_contracts:file_contract()</seealso>)</typehead></typedecl>
</type>
<type>
  <name>dial_warn_tag</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dial_warn_tag">dial_warn_tag()</marker> = warn_return_no_exit<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_return_only_exit<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_not_called<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_non_proper_list<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_matching<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_opaque<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_fun_app<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_failing_call<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_bin_construction<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_types<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_syntax<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_not_equal<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_subtype<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_supertype<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_callgraph<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_umatched_return<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_race_condition<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_behaviour<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_contract_range<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_undefined_callbacks<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>| warn_unknown</typehead></typedecl>
</type>
<type>
  <name>dial_warning</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-dial_warning">dial_warning()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-dial_warn_tag">dial_warn_tag()</seealso>, <seealso marker="#type-file_line">file_line()</seealso>, {atom(), [term()]}}</typehead></typedecl>
</type>
<type>
  <name>file_contract</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_contract">file_contract()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>{<seealso marker="#type-file_line">file_line()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]}}</typehead></typedecl>
</type>
<type>
  <name>file_line</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-file_line">file_line()</marker> = {<seealso marker="file#type-filename">file:filename()</seealso>, integer() &gt;= 0}</typehead></typedecl>
</type>
<type>
  <name>fun_types</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-fun_types">fun_types()</marker> = <seealso marker="dict#type-dict">dict:dict</seealso>(<seealso marker="#type-label">label()</seealso>, <seealso marker="erl_types#type-type_table">erl_types:type_table()</seealso>)</typehead></typedecl>
</type>
<type>
  <name>label</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-label">label()</marker> = integer() &gt;= 0</typehead></typedecl>
</type>
<type>
  <name>opaques</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-opaques">opaques()</marker> = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>] | universe</typehead></typedecl>
</type>
<type>
  <name>opaques_fun</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-opaques_fun">opaques_fun()</marker> = fun((module()) -&gt; <seealso marker="#type-opaques">opaques()</seealso>)</typehead></typedecl>
</type>
<type>
  <name>plt_contracts</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-plt_contracts">plt_contracts()</marker> = <br/><nbsp/><nbsp/><nbsp/><nbsp/>[{mfa(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]}}]</typehead></typedecl>
</type>
<type>
  <name>types</name>
  <n_vars>0</n_vars>
  <typedecl>
      <typehead><marker id="type-types">types()</marker> = <seealso marker="erl_types#type-type_table">erl_types:type_table()</seealso></typehead></typedecl>
</type>
<spec>
  <name>check_contract</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>check_contract(Contract ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>SuccType :: <seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>ok | {error, term()}</head></clause>
  </contract>
  <anno>Contract</anno>
  <anno>SuccType</anno>
</spec>
<spec>
  <name>check_contracts</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>check_contracts(Contracts :: [{mfa(), <seealso marker="#type-file_contract">file_contract()</seealso>}],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>FunTypes :: <seealso marker="#type-fun_types">fun_types()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>FindOpaques :: <seealso marker="#type-opaques_fun">opaques_fun()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-plt_contracts">plt_contracts()</seealso></head></clause>
  </contract>
  <anno>Callgraph</anno>
  <anno>Contracts</anno>
  <anno>FindOpaques</anno>
  <anno>FunTypes</anno>
</spec>
<spec>
  <name>contract_to_string</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>contract_to_string(Contract ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>string()</head></clause>
  </contract>
  <anno>Contract</anno>
</spec>
<spec>
  <name>contracts_without_fun</name>
  <arity>3</arity>
  <contract>
    <clause>
      <head>contracts_without_fun(Contracts :: <seealso marker="#type-contracts">contracts()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>AllFuns0 :: [term()],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Callgraph :: <seealso marker="dialyzer_callgraph#type-callgraph">dialyzer_callgraph:callgraph()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-dial_warning">dial_warning()</seealso>]</head></clause>
  </contract>
  <anno>AllFuns0</anno>
  <anno>Callgraph</anno>
  <anno>Contracts</anno>
</spec>
<spec>
  <name>get_contract_args</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_contract_args(Contract ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>]</head></clause>
  </contract>
  <anno>Contract</anno>
</spec>
<spec>
  <name>get_contract_return</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>get_contract_return(Contract ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso></head></clause>
  </contract>
  <anno>Contract</anno>
</spec>
<spec>
  <name>get_contract_return</name>
  <arity>2</arity>
  <contract>
    <clause>
      <head>get_contract_return(Contract ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]},<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Args :: [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>]) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso></head></clause>
  </contract>
  <anno>Args</anno>
  <anno>Contract</anno>
</spec>
<spec>
  <name>get_invalid_contract_warnings</name>
  <arity>4</arity>
  <contract>
    <clause>
      <head>get_invalid_contract_warnings(Modules :: [module()],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>CodeServer ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_codeserver#type-codeserver">dialyzer_codeserver:codeserver()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>Plt :: <seealso marker="dialyzer_plt#type-plt">dialyzer_plt:plt()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>FindOpaques :: <seealso marker="#type-opaques_fun">opaques_fun()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>[<seealso marker="#type-dial_warning">dial_warning()</seealso>]</head></clause>
  </contract>
  <anno>CodeServer</anno>
  <anno>FindOpaques</anno>
  <anno>Modules</anno>
  <anno>Plt</anno>
</spec>
<spec>
  <name>is_overloaded</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>is_overloaded(Contract ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>#contract{contracts = [<seealso marker="#type-contract_pair">contract_pair()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>args = [<seealso marker="erl_types#type-erl_type">erl_types:erl_type()</seealso>],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>forms = [{term(), term()}]}) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>boolean()</head></clause>
  </contract>
  <anno>Contract</anno>
</spec>
<spec>
  <name>process_contract_remote_types</name>
  <arity>1</arity>
  <contract>
    <clause>
      <head>process_contract_remote_types(CodeServer ::<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_codeserver#type-codeserver">dialyzer_codeserver:codeserver()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="dialyzer_codeserver#type-codeserver">dialyzer_codeserver:codeserver()</seealso></head></clause>
  </contract>
  <anno>CodeServer</anno>
</spec>
<spec>
  <name>store_tmp_contract</name>
  <arity>5</arity>
  <contract>
    <clause>
      <head>store_tmp_contract(MFA :: mfa(),<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>FileLine :: <seealso marker="#type-file_line">file_line()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>TypeSpec :: [term()],<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>SpecDict :: <seealso marker="#type-contracts">contracts()</seealso>,<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/>RecordsDict :: <seealso marker="#type-types">types()</seealso>) -&gt;<br/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><nbsp/><seealso marker="#type-contracts">contracts()</seealso></head></clause>
  </contract>
  <anno>FileLine</anno>
  <anno>MFA</anno>
  <anno>RecordsDict</anno>
  <anno>SpecDict</anno>
  <anno>TypeSpec</anno>
</spec>
<timestamp>Generated by EDoc, May 6 2014, 16:27:11.</timestamp>
</module>