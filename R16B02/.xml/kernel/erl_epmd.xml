<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>erl_epmd</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>erl_epmd.xml</file></header>
<module>erl_epmd</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>calls() = client_info_req | stop | {register, term(), term()}</c></tag>
<item><marker id="type-calls"/> </item>
<tag><c>state() = #state{}</c></tag>
<item><marker id="type-state"/> </item>
</taglist></section>
<funcs>
<func>
<name>start() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="start-0"/>
 </desc></func>
<func>
<name>start_link() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="start_link-0"/>
 </desc></func>
<func>
<name>stop() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="stop-0"/>
 </desc></func>
<func>
<name>port_please(Node, Host) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="port_please-2"/>
 </desc></func>
<func>
<name>port_please(Node, HostName, Timeout) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="port_please-3"/>
 </desc></func>
<func>
<name>names() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="names-0"/>
 </desc></func>
<func>
<name>names(HostName) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="names-1"/>
 </desc></func>
<func>
<name>register_node(Name, PortNo) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="register_node-2"/>
 </desc></func>
<func>
<name>init(X1::term()) -&gt; {ok, state()}</name>
<fsummary> </fsummary>

<desc><marker id="init-1"/>
 </desc></func>
<func>
<name>handle_call(X1::calls(), From::term(), State::state()) -&gt; {reply, term(), state()} | {stop, shutdown, ok, state()}</name>
<fsummary> </fsummary>

<desc><marker id="handle_call-3"/>
 </desc></func>
<func>
<name>handle_cast(X1::term(), State::state()) -&gt; {noreply, state()}</name>
<fsummary> </fsummary>

<desc><marker id="handle_cast-2"/>
 </desc></func>
<func>
<name>handle_info(X1::term(), State::state()) -&gt; {noreply, state()}</name>
<fsummary> </fsummary>

<desc><marker id="handle_info-2"/>
 </desc></func>
<func>
<name>terminate(X1::term(), State::state()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="terminate-2"/>
 </desc></func>
<func>
<name>code_change(OldVsn::term(), State::state(), Extra::term()) -&gt; {ok, state()}</name>
<fsummary> </fsummary>

<desc><marker id="code_change-3"/>
 </desc></func>
<func>
<name>open() -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="open-0"/>
 </desc></func>
<func>
<name>open(EpmdAddr) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="open-1"/>
 </desc></func>
<func>
<name>open(EpmdAddr, Timeout) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="open-2"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>