<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>dialyzer_behaviours</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>dialyzer_behaviours.xml</file></header>
<module>dialyzer_behaviours</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>arg_list() = [byte()]</c></tag>
<item><marker id="type-arg_list"/> </item>
<tag><c>behaviour() = atom()</c></tag>
<item><marker id="type-behaviour"/> </item>
<tag><c>behaviour_api_dict() = [{behaviour(), behaviour_api_info()}]</c></tag>
<item><marker id="type-behaviour_api_dict"/> </item>
<tag><c>behaviour_api_info() = [{original_fun(), replacement_fun()}]</c></tag>
<item><marker id="type-behaviour_api_info"/> </item>
<tag><c>original_fun() = {atom(), arity()}</c></tag>
<item><marker id="type-original_fun"/> </item>
<tag><c>replacement_fun() = {atom(), arity(), arg_list()}</c></tag>
<item><marker id="type-replacement_fun"/> </item>
</taglist></section>
<funcs>
<func>
<name>check_callbacks(Module::module(), Attrs::[{cerl() (see module cerl), cerl() (see module cerl)}], Plt::plt() (see module dialyzer_plt), Codeserver::codeserver() (see module dialyzer_codeserver)) -&gt; [dial_warning()]</name>
<fsummary> </fsummary>

<desc><marker id="check_callbacks-4"/>
 </desc></func>
<func>
<name>translatable_behaviours(Tree::c_module() (see module cerl)) -&gt; behaviour_api_dict()</name>
<fsummary> </fsummary>

<desc><marker id="translatable_behaviours-1"/>
 </desc></func>
<func>
<name>get_behaviour_apis(Behaviours::[behaviour()]) -&gt; [mfa()]</name>
<fsummary> </fsummary>

<desc><marker id="get_behaviour_apis-1"/>
 </desc></func>
<func>
<name>translate_behaviour_api_call(Fun::mfa_or_funlbl() (see module dialyzer_callgraph), ArgTypes::[erl_type() (see module erl_types)], Args::[core_vars() (see module dialyzer_races)], Module::module(), BehApiInfo::behaviour_api_dict()) -&gt; {mfa_or_funlbl() (see module dialyzer_callgraph), [erl_type() (see module erl_types)], [core_vars() (see module dialyzer_races)]} | plain_call</name>
<fsummary> </fsummary>

<desc><marker id="translate_behaviour_api_call-5"/>
 </desc></func>
<func>
<name>translate_callgraph(Behaviours::behaviour_api_dict(), Module::atom(), Callgraph::callgraph() (see module dialyzer_callgraph)) -&gt; callgraph() (see module dialyzer_callgraph)</name>
<fsummary> </fsummary>

<desc><marker id="translate_callgraph-3"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>