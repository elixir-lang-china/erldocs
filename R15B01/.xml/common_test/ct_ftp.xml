<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>ct_ftp</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>ct_ftp.xml</file></header>
<module>ct_ftp</module>
<modulesummary>FTP client module (based on the FTP support of the INETS application).</modulesummary>
<description>
<p>FTP client module (based on the FTP support of the INETS application).
  </p></description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>connection() = handle() | target_name() (see module ct)</c></tag>
<item><marker id="type-connection"/> </item>
<tag><c>handle() = handle() (see module ct_gen_conn)</c></tag>
<item><marker id="type-handle"/>
<p>Handle for a specific
   ftp connection.</p>
</item>
</taglist></section>
<funcs>
<func>
<name>put(KeyOrName, LocalFile, RemoteFile) -&gt; ok | {error, Reason}</name>
<fsummary>Open a ftp connection and send a file to the remote host.</fsummary>
<type>
<v>KeyOrName = Key | Name</v><v>Key = atom()</v><v>Name = target_name() (see module ct)</v><v>LocalFile = string()</v><v>RemoteFile = string()</v></type>
<desc><marker id="put-3"/>

<p>Open a ftp connection and send a file to the remote host.</p>
  
   <p><c>LocalFile</c> and <c>RemoteFile</c> must be
   absolute paths.</p>
  
   <p>If the target host is a "special" node, the ftp address must be
   specified in the config file like this:</p>
   <pre>
   {node,[{ftp,IpAddr}]}.</pre>
  
   <p>If the target host is something else, e.g. a unix host, the
   config file must also include the username and password (both
   strings):</p>
   <pre>
   {unix,[{ftp,IpAddr},
          {username,Username},
          {password,Password}]}.</pre>
</desc></func>
<func>
<name>get(KeyOrName, RemoteFile, LocalFile) -&gt; ok | {error, Reason}</name>
<fsummary>Open a ftp connection and fetch a file from the remote host.</fsummary>
<type>
<v>KeyOrName = Key | Name</v><v>Key = atom()</v><v>Name = target_name() (see module ct)</v><v>RemoteFile = string()</v><v>LocalFile = string()</v></type>
<desc><marker id="get-3"/>

<p>Open a ftp connection and fetch a file from the remote host.</p>
  
   <p><c>RemoteFile</c> and <c>LocalFile</c> must be
   absolute paths.</p>
  
   <p>The config file must be as for put/3.</p>
<p><em>See also:</em> <seealso marker="#put-3">put/3</seealso>.</p>
</desc></func>
<func>
<name>open(KeyOrName) -&gt; {ok, Handle} | {error, Reason}</name>
<fsummary>Open an FTP connection to the specified node.</fsummary>
<type>
<v>KeyOrName = Key | Name</v><v>Key = atom()</v><v>Name = target_name() (see module ct)</v><v>Handle = handle()</v></type>
<desc><marker id="open-1"/>

<p>Open an FTP connection to the specified node.
   </p><p>You can open one connection for a particular <c>Name</c> and
   use the same name as reference for all subsequent operations. If you
   want the connection to be associated with <c>Handle</c> instead
   (in case you need to open multiple connections to a host for example),
   simply use <c>Key</c>, the configuration variable name, to
   specify the target. Note that a connection that has no associated target
   name can only be closed with the handle value.</p>
</desc></func>
<func>
<name>send(Connection, LocalFile) -&gt; ok | {error, Reason}</name>
<fsummary>Send a file over FTP.</fsummary>

<desc><marker id="send-2"/>

<p>Send a file over FTP.
   </p><p>The file will get the same name on the remote host.</p>
<p><em>See also:</em> <seealso marker="#send-3">send/3</seealso>.</p>
</desc></func>
<func>
<name>send(Connection, LocalFile, RemoteFile) -&gt; ok | {error, Reason}</name>
<fsummary>Send a file over FTP.</fsummary>
<type>
<v>Connection = connection()</v><v>LocalFile = string()</v><v>RemoteFile = string()</v></type>
<desc><marker id="send-3"/>

<p>Send a file over FTP.</p>
  
   <p>The file will be named <c>RemoteFile</c> on the remote host.</p>
</desc></func>
<func>
<name>recv(Connection, RemoteFile) -&gt; ok | {error, Reason}</name>
<fsummary>Fetch a file over FTP.</fsummary>

<desc><marker id="recv-2"/>

<p>Fetch a file over FTP.
   </p><p>The file will get the same name on the local host.</p>
<p><em>See also:</em> <seealso marker="#recv-3">recv/3</seealso>.</p>
</desc></func>
<func>
<name>recv(Connection, RemoteFile, LocalFile) -&gt; ok | {error, Reason}</name>
<fsummary>Fetch a file over FTP.</fsummary>
<type>
<v>Connection = connection()</v><v>RemoteFile = string()</v><v>LocalFile = string()</v></type>
<desc><marker id="recv-3"/>

<p>Fetch a file over FTP.</p>
  
   <p>The file will be named <c>LocalFile</c> on the local host.</p>
</desc></func>
<func>
<name>cd(Connection, Dir) -&gt; ok | {error, Reason}</name>
<fsummary>Change directory on remote host.</fsummary>
<type>
<v>Connection = connection()</v><v>Dir = string()</v></type>
<desc><marker id="cd-2"/>

<p>Change directory on remote host.</p>
</desc></func>
<func>
<name>ls(Connection, Dir) -&gt; {ok, Listing} | {error, Reason}</name>
<fsummary>List the directory Dir.</fsummary>
<type>
<v>Connection = connection()</v><v>Dir = string()</v><v>Listing = string()</v></type>
<desc><marker id="ls-2"/>

<p>List the directory Dir.</p>
</desc></func>
<func>
<name>type(Connection, Type) -&gt; ok | {error, Reason}</name>
<fsummary>Change file transfer type.</fsummary>
<type>
<v>Connection = connection()</v><v>Type = ascii | binary</v></type>
<desc><marker id="type-2"/>

<p>Change file transfer type</p>
</desc></func>
<func>
<name>delete(Connection, File) -&gt; ok | {error, Reason}</name>
<fsummary>Delete a file on remote host.</fsummary>
<type>
<v>Connection = connection()</v><v>File = string()</v></type>
<desc><marker id="delete-2"/>

<p>Delete a file on remote host</p>
</desc></func>
<func>
<name>close(Connection) -&gt; ok | {error, Reason}</name>
<fsummary>Close the FTP connection.</fsummary>
<type>
<v>Connection = connection()</v></type>
<desc><marker id="close-1"/>

<p>Close the FTP connection.</p>
</desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>