<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>pubkey_cert</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>pubkey_cert.xml</file></header>
<module>pubkey_cert</module>
<modulesummary/>
<description>
</description>
<funcs>
<func>
<name>verify_data(DER::binary()) -&gt; {md5 | sha, binary(), binary()}</name>
<fsummary> </fsummary>

<desc><marker id="verify_data-1"/>
 </desc></func>
<func>
<name>init_validation_state(OTPCertificate::#'OTPCertificate'{}, DefaultPathLen::integer(), Options::list()) -&gt; #path_validation_state{}</name>
<fsummary> </fsummary>

<desc><marker id="init_validation_state-3"/>
 </desc></func>
<func>
<name>prepare_for_next_cert(OTPCertificate::#'OTPCertificate'{}, Path_validation_state::#path_validation_state{}) -&gt; #path_validation_state{}</name>
<fsummary> </fsummary>

<desc><marker id="prepare_for_next_cert-2"/>
 </desc></func>
<func>
<name>validate_time(OTPCertificate::#'OTPCertificate'{}, UserState::term(), VerifyFun::function()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="validate_time-3"/>
 </desc></func>
<func>
<name>validate_issuer(OTPCertificate::#'OTPCertificate'{}, Issuer::term(), UserState::term(), VerifyFun::function()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="validate_issuer-4"/>
 </desc></func>
<func>
<name>validate_signature(OTPCertificate::#'OTPCertificate'{}, DER::binary(), Key::term(), KeyParams::term(), UserState::term(), VerifyFun::function()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="validate_signature-6"/>
 </desc></func>
<func>
<name>validate_names(OTPCertificate::#'OTPCertificate'{}, Permit::no_constraints | list(), Exclude::list(), Last::term(), UserState::term(), VerifyFun::function()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="validate_names-6"/>
 </desc></func>
<func>
<name>validate_revoked_status(OTPCertificate::#'OTPCertificate'{}, UserState::term(), VerifyFun::function()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="validate_revoked_status-3"/>
 </desc></func>
<func>
<name>validate_extensions(OTPCertificate::#'OTPCertificate'{}, Path_validation_state::#path_validation_state{}, UserState::term(), VerifyFun::function()) -&gt; {#path_validation_state{}, UserState::term()}</name>
<fsummary> </fsummary>

<desc><marker id="validate_extensions-4"/>
 </desc></func>
<func>
<name>normalize_general_name(X1::{rdnSequence, term()}) -&gt; {rdnSequence, term()}</name>
<fsummary> </fsummary>

<desc><marker id="normalize_general_name-1"/>
 </desc></func>
<func>
<name>is_self_signed(OTPCertificate::#'OTPCertificate'{}) -&gt; boolean()</name>
<fsummary> </fsummary>

<desc><marker id="is_self_signed-1"/>
 </desc></func>
<func>
<name>is_issuer(X1::{rdnSequence, term()}, X2::{rdnSequence, term()}) -&gt; boolean()</name>
<fsummary> </fsummary>

<desc><marker id="is_issuer-2"/>
 </desc></func>
<func>
<name>issuer_id(OTPCertificate::#'OTPCertificate'{}, X2::self | other) -&gt; {ok, {integer(), term()}} | {error, issuer_not_found}</name>
<fsummary> </fsummary>

<desc><marker id="issuer_id-2"/>
 </desc></func>
<func>
<name>is_fixed_dh_cert(OTPCertificate::#'OTPCertificate'{}) -&gt; boolean()</name>
<fsummary> </fsummary>

<desc><marker id="is_fixed_dh_cert-1"/>
 </desc></func>
<func>
<name>verify_fun(OTPCertificate::#'OTPCertificate'{}, Result::{bad_cert, atom()} | {extension, #'Extension'{}} | valid | valid_peer, UserState0::term(), VerifyFun::function()) -&gt; term()</name>
<fsummary> </fsummary>

<desc><marker id="verify_fun-4"/>
 </desc></func>
<func>
<name>digest_type(X1) -&gt; term()
</name>
<fsummary> </fsummary>

<desc><marker id="digest_type-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>