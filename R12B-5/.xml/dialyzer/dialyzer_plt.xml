<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>dialyzer_plt</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>dialyzer_plt.xml</file></header>
<module>dialyzer_plt</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>check_error() = not_valid | no_such_file | read_error | {no_file_to_remove, string()}</c></tag>
<item><marker id="type-check_error"/> </item>
<tag><c>md5_diff() = [{differ, atom()} | {removed, atom()}]</c></tag>
<item><marker id="type-md5_diff"/> </item>
<tag><c>mod_deps() = dict()</c></tag>
<item><marker id="type-mod_deps"/> </item>
</taglist></section>
<funcs>
<func>
<name>new() -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="new-0"/>
 </desc></func>
<func>
<name>delete_module(Dialyzer_plt::#dialyzer_plt{}, Mod::atom()) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="delete_module-2"/>
 </desc></func>
<func>
<name>delete_list(Dialyzer_plt::#dialyzer_plt{}, List::[term()]) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="delete_list-2"/>
 </desc></func>
<func>
<name>insert_contract_list(Dialyzer_plt::#dialyzer_plt{}, List::[{mfa(), #contract{}}]) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="insert_contract_list-2"/>
 </desc></func>
<func>
<name>lookup_contract(Dialyzer_plt::#dialyzer_plt{}, MFA::mfa()) -&gt; none | {value, #contract{}}</name>
<fsummary> </fsummary>

<desc><marker id="lookup_contract-2"/>
 </desc></func>
<func>
<name>delete_contract_list(Dialyzer_plt::#dialyzer_plt{}, List::[mfa()]) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="delete_contract_list-2"/>
 </desc></func>
<func>
<name>insert_list(Dialyzer_plt::#dialyzer_plt{}, List::[{mfa() | integer(), {term(), term()}}]) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="insert_list-2"/>
 </desc></func>
<func>
<name>lookup(Dialyzer_plt::#dialyzer_plt{}, MFA::integer() | mfa()) -&gt; none | {value, {term(), term()}}</name>
<fsummary> </fsummary>

<desc><marker id="lookup-2"/>
 </desc></func>
<func>
<name>lookup_module(Dialyzer_plt::#dialyzer_plt{}, M::atom()) -&gt; none | {value, [{mfa(), term(), term()}]}</name>
<fsummary> </fsummary>

<desc><marker id="lookup_module-2"/>
 </desc></func>
<func>
<name>contains_module(Dialyzer_plt::#dialyzer_plt{}, M::atom()) -&gt; bool()</name>
<fsummary> </fsummary>

<desc><marker id="contains_module-2"/>
 </desc></func>
<func>
<name>contains_mfa(Dialyzer_plt::#dialyzer_plt{}, MFA::mfa()) -&gt; bool()</name>
<fsummary> </fsummary>

<desc><marker id="contains_mfa-2"/>
 </desc></func>
<func>
<name>get_default_plt() -&gt; string()</name>
<fsummary> </fsummary>

<desc><marker id="get_default_plt-0"/>
 </desc></func>
<func>
<name>plt_and_info_from_file(FileName::string()) -&gt; {#dialyzer_plt{}, {term(), term()}}</name>
<fsummary> </fsummary>

<desc><marker id="plt_and_info_from_file-1"/>
 </desc></func>
<func>
<name>from_file(FileName::string()) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="from_file-1"/>
 </desc></func>
<func>
<name>included_files(FileName::string()) -&gt; {ok, [string()]} | {error, no_such_file | read_error}</name>
<fsummary> </fsummary>

<desc><marker id="included_files-1"/>
 </desc></func>
<func>
<name>merge_plts(Dialyzer_plt::[#dialyzer_plt{}]) -&gt; #dialyzer_plt{}</name>
<fsummary> </fsummary>

<desc><marker id="merge_plts-1"/>
 </desc></func>
<func>
<name>to_file(FileName::string(), Dialyzer_plt::#dialyzer_plt{}, ModDeps::dict(), X4::{md5(), dict()}) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="to_file-4"/>
 </desc></func>
<func>
<name>check_plt(FileName::string(), RemoveFiles::[string()], AddFiles::[string()]) -&gt; ok | {error, check_error()} | {differ, md5(), md5_diff(), mod_deps()} | {old_version, md5()}</name>
<fsummary> </fsummary>

<desc><marker id="check_plt-3"/>
 </desc></func>
<func>
<name>compute_md5_from_files(Files::[string()]) -&gt; [{string(), binary()}]</name>
<fsummary> </fsummary>

<desc><marker id="compute_md5_from_files-1"/>
 </desc></func>
<func>
<name>to_edoc(Dialyzer_plt::#dialyzer_plt{}) -&gt; string()</name>
<fsummary> </fsummary>

<desc><marker id="to_edoc-1"/>
 </desc></func>
<func>
<name>to_edoc(Dialyzer_plt::#dialyzer_plt{}, M::atom(), F::atom(), A::byte()) -&gt; string()</name>
<fsummary> </fsummary>

<desc><marker id="to_edoc-4"/>
 </desc></func>
<func>
<name>pp_non_returning() -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="pp_non_returning-0"/>
 </desc></func>
<func>
<name>pp_mod(Mod::atom()) -&gt; ok</name>
<fsummary> </fsummary>

<desc><marker id="pp_mod-1"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>