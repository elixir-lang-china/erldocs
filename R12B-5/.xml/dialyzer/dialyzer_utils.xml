<?xml version="1.0" encoding="latin1" ?>
<!DOCTYPE erlref SYSTEM "erlref.dtd">
<erlref>
<header>
<title>dialyzer_utils</title>
<prepared></prepared>
<responsible></responsible>
<docno>1</docno>
<approved></approved>
<checked></checked>
<date></date>
<rev>A</rev>
<file>dialyzer_utils.xml</file></header>
<module>dialyzer_utils</module>
<modulesummary/>
<description>
</description>
<section><title>DATA TYPES</title><marker id="types"/>

<taglist>
<tag><c>abstract_code() = [term()]</c></tag>
<item><marker id="type-abstract_code"/> </item>
</taglist></section>
<funcs>
<func>
<name>get_abstract_code_from_src(File::atom() | string()) -&gt; {ok, abstract_code()} | {error, [string()]}</name>
<fsummary> </fsummary>

<desc><marker id="get_abstract_code_from_src-1"/>
 </desc></func>
<func>
<name>get_abstract_code_from_src(File::atom() | string(), Opts::[term()]) -&gt; {ok, abstract_code()} | {error, [string()]}</name>
<fsummary> </fsummary>

<desc><marker id="get_abstract_code_from_src-2"/>
 </desc></func>
<func>
<name>get_core_from_src(File::string()) -&gt; {ok, core_records()} | {error, string()}</name>
<fsummary> </fsummary>

<desc><marker id="get_core_from_src-1"/>
 </desc></func>
<func>
<name>get_core_from_src(File::string(), Opts::[term()]) -&gt; {ok, core_records()} | {error, string()}</name>
<fsummary> </fsummary>

<desc><marker id="get_core_from_src-2"/>
 </desc></func>
<func>
<name>get_abstract_code_from_beam(File::string()) -&gt; error | {ok, abstract_code()}</name>
<fsummary> </fsummary>

<desc><marker id="get_abstract_code_from_beam-1"/>
 </desc></func>
<func>
<name>get_core_from_abstract_code(AbstrCode::abstract_code()) -&gt; error | {ok, core_records()}</name>
<fsummary> </fsummary>

<desc><marker id="get_core_from_abstract_code-1"/>
 </desc></func>
<func>
<name>get_core_from_abstract_code(AbstrCode::abstract_code(), Opts::[term()]) -&gt; error | {ok, core_records()}</name>
<fsummary> </fsummary>

<desc><marker id="get_core_from_abstract_code-2"/>
 </desc></func>
<func>
<name>get_record_and_type_info(AbstractCode::abstract_code()) -&gt; {ok, dict()} | {error, string()}</name>
<fsummary> </fsummary>

<desc><marker id="get_record_and_type_info-1"/>
 </desc></func>
<func>
<name>get_spec_info(AbstractCode::abstract_code(), RecordsDict::dict()) -&gt; {ok, dict()} | {error, string()}</name>
<fsummary> </fsummary>

<desc><marker id="get_spec_info-2"/>
 </desc></func>
<func>
<name>format_sig(Type::erl_type()) -&gt; string()</name>
<fsummary> </fsummary>

<desc><marker id="format_sig-1"/>
 </desc></func>
<func>
<name>format_sig(Type::erl_type(), RecDict::dict()) -&gt; string()</name>
<fsummary> </fsummary>

<desc><marker id="format_sig-2"/>
 </desc></func>
<func>
<name>pp_hook() -&gt; (core_tree(), term(), term()) -&gt; any()</name>
<fsummary> </fsummary>

<desc><marker id="pp_hook-0"/>
 </desc></func></funcs>

<authors>
<aname> </aname>
<email> </email></authors></erlref>